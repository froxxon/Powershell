<?xml version="1.0" ?><policyDefinitionResources revision="1.0" schemaVersion="1.0"><displayName/><description/><resources><stringTable><string id="SUPPORTED_WIN7">Microsoft Windows 7 or later</string><string id="googlechrome">Google Chrome</string><string id="googlechrome_recommended">Google Chrome - Default Settings (users can override)</string><string id="ContentSettings_group">Content Settings</string><string id="DefaultCookiesSetting">Default cookies setting</string><string id="DefaultCookiesSetting_Explain">Allows you to set whether websites are allowed to set local data. Setting local data can be either allowed for all websites or denied for all websites.

If this policy is set to 'Keep cookies for the duration of the session' then cookies will be cleared when the session closes. Note that if Google Chrome is running in 'background mode', the session may not close when the last window is closed. Please see the 'BackgroundModeEnabled' policy for more information about configuring this behavior.

If this policy is left not set, 'AllowCookies' will be used and the user will be able to change it.</string><string id="DefaultCookiesSetting_AllowCookies">Allow all sites to set local data</string><string id="DefaultCookiesSetting_BlockCookies">Do not allow any site to set local data</string><string id="DefaultCookiesSetting_SessionOnly">Keep cookies for the duration of the session</string><string id="DefaultImagesSetting">Default images setting</string><string id="DefaultImagesSetting_Explain">Allows you to set whether websites are allowed to display images. Displaying images can be either allowed for all websites or denied for all websites.

If this policy is left not set, 'AllowImages' will be used and the user will be able to change it.

Note that previously this policy was erroneously enabled on Android, but this functionality has never been fully supported on Android.</string><string id="DefaultImagesSetting_AllowImages">Allow all sites to show all images</string><string id="DefaultImagesSetting_BlockImages">Do not allow any site to show images</string><string id="DefaultJavaScriptSetting">Default JavaScript setting</string><string id="DefaultJavaScriptSetting_Explain">Allows you to set whether websites are allowed to run JavaScript. Running JavaScript can be either allowed for all websites or denied for all websites.

If this policy is left not set, 'AllowJavaScript' will be used and the user will be able to change it.</string><string id="DefaultJavaScriptSetting_AllowJavaScript">Allow all sites to run JavaScript</string><string id="DefaultJavaScriptSetting_BlockJavaScript">Do not allow any site to run JavaScript</string><string id="DefaultPluginsSetting">Default Flash setting</string><string id="DefaultPluginsSetting_Explain">Allows you to set whether websites are allowed to automatically run the Flash plugin. Automatically running the Flash plugin can be either allowed for all websites or denied for all websites.

Click to play allows the Flash plugin to run but the user must click on the placeholder to start its execution.

Automatic playback is only allowed for domains explictly listed in the PluginsAllowedForUrls policy. If you want to enabled automatic playback for all sites consider adding http://* and https://* to this list.

If this policy is left not set, the user will be able to change this setting manually.</string><string id="DefaultPluginsSetting_AllowPlugins">Allow all sites to automatically run the Flash plugin</string><string id="DefaultPluginsSetting_BlockPlugins">Block the Flash plugin</string><string id="DefaultPluginsSetting_ClickToPlay">Click to play</string><string id="DefaultPopupsSetting">Default popups setting</string><string id="DefaultPopupsSetting_Explain">Allows you to set whether websites are allowed to show pop-ups. Showing popups can be either allowed for all websites or denied for all websites.

If this policy is left not set, 'BlockPopups' will be used and the user will be able to change it.</string><string id="DefaultPopupsSetting_AllowPopups">Allow all sites to show pop-ups</string><string id="DefaultPopupsSetting_BlockPopups">Do not allow any site to show popups</string><string id="DefaultNotificationsSetting">Default notification setting</string><string id="DefaultNotificationsSetting_Explain">Allows you to set whether websites are allowed to display desktop notifications. Displaying desktop notifications can be allowed by default, denied by default or the user can be asked every time a website wants to show desktop notifications.

If this policy is left not set, 'AskNotifications' will be used and the user will be able to change it.</string><string id="DefaultNotificationsSetting_AllowNotifications">Allow sites to show desktop notifications</string><string id="DefaultNotificationsSetting_BlockNotifications">Do not allow any site to show desktop notifications</string><string id="DefaultNotificationsSetting_AskNotifications">Ask every time a site wants to show desktop notifications</string><string id="DefaultGeolocationSetting">Default geolocation setting</string><string id="DefaultGeolocationSetting_Explain">Allows you to set whether websites are allowed to track the users' physical location. Tracking the users' physical location can be allowed by default, denied by default or the user can be asked every time a website requests the physical location.

If this policy is left not set, 'AskGeolocation' will be used and the user will be able to change it.</string><string id="DefaultGeolocationSetting_AllowGeolocation">Allow sites to track the users' physical location</string><string id="DefaultGeolocationSetting_BlockGeolocation">Do not allow any site to track the users' physical location</string><string id="DefaultGeolocationSetting_AskGeolocation">Ask whenever a site wants to track the users' physical location</string><string id="DefaultWebBluetoothGuardSetting">Control use of the Web Bluetooth API</string><string id="DefaultWebBluetoothGuardSetting_Explain">Allows you to set whether websites are allowed to get access to nearby Bluetooth devices. Access can be completely blocked, or the user can be asked every time a website wants to get access to nearby Bluetooth devices.

If this policy is left not set, '3' will be used, and the user will be able to change it.</string><string id="DefaultWebBluetoothGuardSetting_BlockWebBluetooth">Do not allow any site to request access to Bluetooth devices via the Web Bluetooth API</string><string id="DefaultWebBluetoothGuardSetting_AskWebBluetooth">Allow sites to ask the user to grant access to a nearby Bluetooth device</string><string id="DefaultWebUsbGuardSetting">Control use of the WebUSB API</string><string id="DefaultWebUsbGuardSetting_Explain">Allows you to set whether websites are allowed to get access to connected USB devices. Access can be completely blocked, or the user can be asked every time a website wants to get access to connected USB devices.

This policy can be overridden for specific URL patterns using the 'WebUsbAskForUrls' and 'WebUsbBlockedForUrls' policies.

If this policy is left not set, '3' will be used, and the user will be able to change it.</string><string id="DefaultWebUsbGuardSetting_BlockWebUsb">Do not allow any site to request access to USB devices via the WebUSB API</string><string id="DefaultWebUsbGuardSetting_AskWebUsb">Allow sites to ask the user to grant access to a connected USB device</string><string id="AutoSelectCertificateForUrls">Automatically select client certificates for these sites</string><string id="AutoSelectCertificateForUrls_Explain">Allows you to specify a list of url patterns that specify sites for which Google Chrome should automatically select a client certificate, if the site requests a certificate.

The value must be an array of stringified JSON dictionaries. Each dictionary must have the form { &quot;pattern&quot;: &quot;$URL_PATTERN&quot;, &quot;filter&quot; : $FILTER }, where $URL_PATTERN is a content setting pattern. $FILTER restricts from which client certificates the browser will automatically select. Independent of the filter, only certificates will be selected that match the server's certificate request. For example, if $FILTER has the form { &quot;ISSUER&quot;: { &quot;CN&quot;: &quot;$ISSUER_CN&quot; } }, additionally only client certificates are selected that are issued by a certificate with the CommonName $ISSUER_CN. If $FILTER contains an &quot;ISSUER&quot; and a &quot;SUBJECT&quot; section, a client certificate must satisfy both conditions to be selected. If $FILTER specifies an organization (&quot;O&quot;), a certificate must have at least one organization which matches the specified value to be selected. If $FILTER specifies an organization unit (&quot;OU&quot;), a certificate must have at least one organization unit which matches the specified value to be selected. If $FILTER is the empty dictionary {}, the selection of client certificates is not additionally restricted.

If this policy is left not set, no auto-selection will be done for any site.

Example value:

{&quot;pattern&quot;:&quot;https://www.example.com&quot;,&quot;filter&quot;:{&quot;ISSUER&quot;:{&quot;CN&quot;:&quot;certificate issuer name&quot;, &quot;L&quot;: &quot;certificate issuer location&quot;, &quot;O&quot;: &quot;certificate issuer org&quot;, &quot;OU&quot;: &quot;certificate issuer org unit&quot;}, &quot;SUBJECT&quot;:{&quot;CN&quot;:&quot;certificate subject name&quot;, &quot;L&quot;: &quot;certificate subject location&quot;, &quot;O&quot;: &quot;certificate subject org&quot;, &quot;OU&quot;: &quot;certificate subject org unit&quot;}}}</string><string id="AutoSelectCertificateForUrlsDesc">Automatically select client certificates for these sites</string><string id="CookiesAllowedForUrls">Allow cookies on these sites</string><string id="CookiesAllowedForUrls_Explain">Allows you to set a list of url patterns that specify sites which are allowed to set cookies.

If this policy is left not set the global default value will be used for all sites either from the 'DefaultCookiesSetting' policy if it is set, or the user's personal configuration otherwise.

See also policies 'CookiesBlockedForUrls' and 'CookiesSessionOnlyForUrls'. Note that there must be no conflicting URL patterns between these three policies - it is unspecified which policy takes precedence.

Example value:

https://www.example.com
[*.]example.edu</string><string id="CookiesAllowedForUrlsDesc">Allow cookies on these sites</string><string id="CookiesBlockedForUrls">Block cookies on these sites</string><string id="CookiesBlockedForUrls_Explain">Allows you to set a list of url patterns that specify sites which are not allowed to set cookies.

If this policy is left not set the global default value will be used for all sites either from the 'DefaultCookiesSetting' policy if it is set, or the user's personal configuration otherwise.

See also policies 'CookiesAllowedForUrls' and 'CookiesSessionOnlyForUrls'. Note that there must be no conflicting URL patterns between these three policies - it is unspecified which policy takes precedence.

Example value:

https://www.example.com
[*.]example.edu</string><string id="CookiesBlockedForUrlsDesc">Block cookies on these sites</string><string id="CookiesSessionOnlyForUrls">Limit cookies from matching URLs to the current session</string><string id="CookiesSessionOnlyForUrls_Explain">Cookies set by pages matching these URL patterns will be limited to the current session, i.e. they will be deleted when the browser exits.

For URLs not covered by the patterns specified here, or for all URLs if this policy is not set, the global default value will be used either from the 'DefaultCookiesSetting' policy, if it is set, or the user's personal configuration otherwise.

Note that if Google Chrome is running in 'background mode', the session may not be closed when the last browser window is closed, but will instead stay active until the browser exits. Please see the 'BackgroundModeEnabled' policy for more information about configuring this behavior.

See also policies 'CookiesAllowedForUrls' and 'CookiesBlockedForUrls'. Note that there must be no conflicting URL patterns between these three policies - it is unspecified which policy takes precedence.

If the &quot;RestoreOnStartup&quot; policy is set to restore URLs from previous sessions this policy will not be respected and cookies will be stored permanently for those sites.

Example value:

https://www.example.com
[*.]example.edu</string><string id="CookiesSessionOnlyForUrlsDesc">Limit cookies from matching URLs to the current session</string><string id="ImagesAllowedForUrls">Allow images on these sites</string><string id="ImagesAllowedForUrls_Explain">Allows you to set a list of url patterns that specify sites which are allowed to display images.

If this policy is left not set the global default value will be used for all sites either from the 'DefaultImagesSetting' policy if it is set, or the user's personal configuration otherwise.

Note that previously this policy was erroneously enabled on Android, but this functionality has never been fully supported on Android.

Example value:

https://www.example.com
[*.]example.edu</string><string id="ImagesAllowedForUrlsDesc">Allow images on these sites</string><string id="ImagesBlockedForUrls">Block images on these sites</string><string id="ImagesBlockedForUrls_Explain">Allows you to set a list of url patterns that specify sites which are not allowed to display images.

If this policy is left not set the global default value will be used for all sites either from the 'DefaultImagesSetting' policy if it is set, or the user's personal configuration otherwise.

Note that previously this policy was erroneously enabled on Android, but this functionality has never been fully supported on Android.

Example value:

https://www.example.com
[*.]example.edu</string><string id="ImagesBlockedForUrlsDesc">Block images on these sites</string><string id="JavaScriptAllowedForUrls">Allow JavaScript on these sites</string><string id="JavaScriptAllowedForUrls_Explain">Allows you to set a list of url patterns that specify sites which are allowed to run JavaScript.

If this policy is left not set the global default value will be used for all sites either from the 'DefaultJavaScriptSetting' policy if it is set, or the user's personal configuration otherwise.

Example value:

https://www.example.com
[*.]example.edu</string><string id="JavaScriptAllowedForUrlsDesc">Allow JavaScript on these sites</string><string id="JavaScriptBlockedForUrls">Block JavaScript on these sites</string><string id="JavaScriptBlockedForUrls_Explain">Allows you to set a list of url patterns that specify sites which are not allowed to run JavaScript.

If this policy is left not set the global default value will be used for all sites either from the 'DefaultJavaScriptSetting' policy if it is set, or the user's personal configuration otherwise.

Example value:

https://www.example.com
[*.]example.edu</string><string id="JavaScriptBlockedForUrlsDesc">Block JavaScript on these sites</string><string id="PluginsAllowedForUrls">Allow the Flash plugin on these sites</string><string id="PluginsAllowedForUrls_Explain">Allows you to set a list of url patterns that specify sites which are allowed to run the Flash plugin.

If this policy is left not set the global default value will be used for all sites either from the 'DefaultPluginsSetting' policy if it is set, or the user's personal configuration otherwise.

Example value:

https://www.example.com
[*.]example.edu</string><string id="PluginsAllowedForUrlsDesc">Allow the Flash plugin on these sites</string><string id="PluginsBlockedForUrls">Block the Flash plugin on these sites</string><string id="PluginsBlockedForUrls_Explain">Allows you to set a list of url patterns that specify sites which are not allowed to run the Flash plugin.

If this policy is left not set the global default value will be used for all sites either from the 'DefaultPluginsSetting' policy if it is set, or the user's personal configuration otherwise.

Example value:

https://www.example.com
[*.]example.edu</string><string id="PluginsBlockedForUrlsDesc">Block the Flash plugin on these sites</string><string id="PopupsAllowedForUrls">Allow popups on these sites</string><string id="PopupsAllowedForUrls_Explain">Allows you to set a list of url patterns that specify sites which are allowed to open popups.

If this policy is left not set the global default value will be used for all sites either from the 'DefaultPopupsSetting' policy if it is set, or the user's personal configuration otherwise.

Example value:

https://www.example.com
[*.]example.edu</string><string id="PopupsAllowedForUrlsDesc">Allow popups on these sites</string><string id="RegisteredProtocolHandlers">Register protocol handlers</string><string id="RegisteredProtocolHandlers_Explain">Allows you to register a list of protocol handlers. This can only be a recommended policy. The property |protocol| should be set to the scheme such as 'mailto' and the property |url| should be set to the URL pattern of the application that handles the scheme. The pattern can include a '%s', which if present will be replaced by the handled URL.

The protocol handlers registered by policy are merged with the ones registered by the user and both are available for use. The user can override the protocol handlers installed by policy by installing a new default handler, but cannot remove a protocol handler registered by policy.

Example value:

[
  {
    &quot;url&quot;: &quot;https://mail.google.com/mail/?extsrc=mailto&amp;url=%s&quot;, 
    &quot;default&quot;: true, 
    &quot;protocol&quot;: &quot;mailto&quot;
  }
]</string><string id="PopupsBlockedForUrls">Block popups on these sites</string><string id="PopupsBlockedForUrls_Explain">Allows you to set a list of url patterns that specify sites which are not allowed to open popups.

If this policy is left not set the global default value will be used for all sites either from the 'DefaultPopupsSetting' policy if it is set, or the user's personal configuration otherwise.

Example value:

https://www.example.com
[*.]example.edu</string><string id="PopupsBlockedForUrlsDesc">Block popups on these sites</string><string id="NotificationsAllowedForUrls">Allow notifications on these sites</string><string id="NotificationsAllowedForUrls_Explain">Allows you to set a list of url patterns that specify sites which are allowed to display notifications.

If this policy is left not set the global default value will be used for all sites either from the 'DefaultNotificationsSetting' policy if it is set, or the user's personal configuration otherwise.

Example value:

https://www.example.com
[*.]example.edu</string><string id="NotificationsAllowedForUrlsDesc">Allow notifications on these sites</string><string id="NotificationsBlockedForUrls">Block notifications on these sites</string><string id="NotificationsBlockedForUrls_Explain">Allows you to set a list of url patterns that specify sites which are not allowed to display notifications.

If this policy is left not set the global default value will be used for all sites either from the 'DefaultNotificationsSetting' policy if it is set, or the user's personal configuration otherwise.

Example value:

https://www.example.com
[*.]example.edu</string><string id="NotificationsBlockedForUrlsDesc">Block notifications on these sites</string><string id="WebUsbAllowDevicesForUrls">Automatically grant permission to these sites to connect to USB devices with the given vendor and product IDs.</string><string id="WebUsbAllowDevicesForUrls_Explain">Allows you to set a list of urls that specify which sites will automatically be granted permission to access a USB device with the given vendor and product IDs. Each item in the list must contain both devices and urls in order for the policy to be valid. Each item in devices can contain a vendor ID and product ID field. Any ID that is omitted is treated as a wildcard with one exception, and that exception is that a product ID cannot be specified without a vendor ID also being specified. Otherwise, the policy will not be valid and will be ignored.

The USB permission model uses the URL of the requesting site (&quot;requesting URL&quot;) and the URL of the top-level frame site (&quot;embedding URL&quot;) to grant permission to the requesting URL to access the USB device. The requesting URL may be different than the embedding URL when the requesting site is loaded in an iframe. Therefore, the &quot;urls&quot; field can contain up to two URL strings delimited by a comma to specify the requesting and embedding URL respectively. If only one URL is specified, then access to the corresponding USB devices will be granted when the requesting site's URL matches this URL regardless of embedding status. The URLs in &quot;urls&quot; must be valid URLs, otherwise the policy will be ignored.

If this policy is left not set, the global default value will be used for all sites either from the 'DefaultWebUsbGuardSetting' policy if it is set, or the user's personal configuration otherwise.

URL patterns in this policy should not clash with the ones configured via WebUsbBlockedForUrls. If there is a clash, this policy will take precedence over WebUsbBlockedForUrls and WebUsbAskForUrls.

Example value:

[
  {
    &quot;devices&quot;: [
      {
        &quot;vendor_id&quot;: 1234, 
        &quot;product_id&quot;: 5678
      }
    ], 
    &quot;urls&quot;: [
      &quot;https://google.com&quot;, 
      &quot;https://requesting.com,https://embedded.com&quot;
    ]
  }
]</string><string id="WebUsbAskForUrls">Allow WebUSB on these sites</string><string id="WebUsbAskForUrls_Explain">Allows you to set a list of url patterns that specify sites which are allowed to ask the user to grant them access to a USB device.

If this policy is left not set the global default value will be used for all sites either from the 'DefaultWebUsbGuardSetting' policy if it is set, or the user's personal configuration otherwise.

URL patterns in this policy should not clash with ones configured via WebUsbBlockedForUrls. It is unspecified which of the two policies takes precedence if a URL matches with both.

Example value:

https://www.example.com
[*.]example.edu</string><string id="WebUsbAskForUrlsDesc">Allow WebUSB on these sites</string><string id="WebUsbBlockedForUrls">Block WebUSB on these sites</string><string id="WebUsbBlockedForUrls_Explain">Allows you to set a list of url patterns that specify sites which are prevented from asking the user to grant them access to a USB device.

If this policy is left not set the global default value will be used for all sites either from the 'DefaultWebUsbGuardSetting' policy if it is set, or the user's personal configuration otherwise.

URL patterns in this policy should not clash with ones configured via WebUsbAskForUrls. It is unspecified which of the two policies takes precedence if a URL matches with both.

Example value:

https://www.example.com
[*.]example.edu</string><string id="WebUsbBlockedForUrlsDesc">Block WebUSB on these sites</string><string id="DefaultSearchProvider_group">Default search provider</string><string id="DefaultSearchProviderEnabled">Enable the default search provider</string><string id="DefaultSearchProviderEnabled_Explain">Enables the use of a default search provider.

If you enable this setting, a default search is performed when the user types text in the omnibox that is not a URL.

You can specify the default search provider to be used by setting the rest of the default search policies. If these are left empty, the user can choose the default provider.

If you disable this setting, no search is performed when the user enters non-URL text in the omnibox.

If you enable or disable this setting, users cannot change or override this setting in Google Chrome.

If this policy is left not set, the default search provider is enabled, and the user will be able to set the search provider list.

This policy is available only on Windows instances that are joined to a Microsoft® Active Directory® domain. or Windows 10 Pro or Enterprise instances that enrolled for device management.</string><string id="DefaultSearchProviderName">Default search provider name</string><string id="DefaultSearchProviderName_Explain">Specifies the name of the default search provider. If left empty or not set, the host name specified by the search URL will be used.

This policy is only considered if the 'DefaultSearchProviderEnabled' policy is enabled.

Example value: My Intranet Search</string><string id="DefaultSearchProviderKeyword">Default search provider keyword</string><string id="DefaultSearchProviderKeyword_Explain">Specifies the keyword, which is the shortcut used in the omnibox to trigger the search for this provider.

This policy is optional. If not set, no keyword will activate the search provider.

This policy is only considered if the 'DefaultSearchProviderEnabled' policy is enabled.

Example value: mis</string><string id="DefaultSearchProviderSearchURL">Default search provider search URL</string><string id="DefaultSearchProviderSearchURL_Explain">Specifies the URL of the search engine used when doing a default search. The URL should contain the string '{searchTerms}', which will be replaced at query time by the terms the user is searching for.

Google's search URL can be specified as: '{google:baseURL}search?q={searchTerms}&amp;{google:RLZ}{google:originalQueryForSuggestion}{google:assistedQueryStats}{google:searchFieldtrialParameter}{google:searchClient}{google:sourceId}ie={inputEncoding}'.

This option must be set when the 'DefaultSearchProviderEnabled' policy is enabled and will only be respected if this is the case.

Example value: https://search.my.company/search?q={searchTerms}</string><string id="DefaultSearchProviderSuggestURL">Default search provider suggest URL</string><string id="DefaultSearchProviderSuggestURL_Explain">Specifies the URL of the search engine used to provide search suggestions. The URL should contain the string '{searchTerms}', which will be replaced at query time by the text the user has entered so far.

This policy is optional. If not set, no suggest URL will be used.

Google's suggest URL can be specified as: '{google:baseURL}complete/search?output=chrome&amp;q={searchTerms}'.

This policy is only respected if the 'DefaultSearchProviderEnabled' policy is enabled.

Example value: https://search.my.company/suggest?q={searchTerms}</string><string id="DefaultSearchProviderIconURL">Default search provider icon</string><string id="DefaultSearchProviderIconURL_Explain">Specifies the favorite icon URL of the default search provider.

This policy is optional. If not set, no icon will be present for the search provider.

This policy is only respected if the 'DefaultSearchProviderEnabled' policy is enabled.

Example value: https://search.my.company/favicon.ico</string><string id="DefaultSearchProviderEncodings">Default search provider encodings</string><string id="DefaultSearchProviderEncodings_Explain">Specifies the character encodings supported by the search provider. Encodings are code page names like UTF-8, GB2312, and ISO-8859-1. They are tried in the order provided.

This policy is optional. If not set, the default will be used which is UTF-8.

This policy is only respected if the 'DefaultSearchProviderEnabled' policy is enabled.

Example value:

UTF-8
UTF-16
GB2312
ISO-8859-1</string><string id="DefaultSearchProviderEncodingsDesc">Default search provider encodings</string><string id="DefaultSearchProviderAlternateURLs">List of alternate URLs for the default search provider</string><string id="DefaultSearchProviderAlternateURLs_Explain">Specifies a list of alternate URLs that can be used to extract search terms from the search engine. The URLs should contain the string '{searchTerms}', which will be used to extract the search terms.

This policy is optional. If not set, no alternate urls will be used to extract search terms.

This policy is only respected if the 'DefaultSearchProviderEnabled' policy is enabled.

Example value:

https://search.my.company/suggest#q={searchTerms}
https://search.my.company/suggest/search#q={searchTerms}</string><string id="DefaultSearchProviderAlternateURLsDesc">List of alternate URLs for the default search provider</string><string id="DefaultSearchProviderImageURL">Parameter providing search-by-image feature for the default search provider</string><string id="DefaultSearchProviderImageURL_Explain">Specifies the URL of the search engine used to provide image search. Search requests will be sent using the GET method. If the DefaultSearchProviderImageURLPostParams policy is set then image search requests will use the POST method instead.

This policy is optional. If not set, no image search will be used.

This policy is only respected if the 'DefaultSearchProviderEnabled' policy is enabled.

Example value: https://search.my.company/searchbyimage/upload</string><string id="DefaultSearchProviderNewTabURL">Default search provider new tab page URL</string><string id="DefaultSearchProviderNewTabURL_Explain">Specifies the URL that a search engine uses to provide a new tab page.

This policy is optional. If not set, no new tab page will be provided.

This policy is only respected if the 'DefaultSearchProviderEnabled' policy is enabled.

Example value: https://search.my.company/newtab</string><string id="DefaultSearchProviderSearchURLPostParams">Parameters for search URL which uses POST</string><string id="DefaultSearchProviderSearchURLPostParams_Explain">Specifies the parameters used when searching a URL with POST. It consists of comma-separated name/value pairs. If a value is a template parameter, like {searchTerms} in above example, it will be replaced with real search terms data.

This policy is optional. If not set, search request will be sent using the GET method.

This policy is only respected if the 'DefaultSearchProviderEnabled' policy is enabled.

Example value: q={searchTerms},ie=utf-8,oe=utf-8</string><string id="DefaultSearchProviderSuggestURLPostParams">Parameters for suggest URL which uses POST</string><string id="DefaultSearchProviderSuggestURLPostParams_Explain">Specifies the parameters used when doing suggestion search with POST. It consists of comma-separated name/value pairs. If a value is a template parameter, like {searchTerms} in above example, it will be replaced with real search terms data.

This policy is optional. If not set, suggest search request will be sent using the GET method.

This policy is only respected if the 'DefaultSearchProviderEnabled' policy is enabled.

Example value: q={searchTerms},ie=utf-8,oe=utf-8</string><string id="DefaultSearchProviderImageURLPostParams">Parameters for image URL which uses POST</string><string id="DefaultSearchProviderImageURLPostParams_Explain">Specifies the parameters used when doing image search with POST. It consists of comma-separated name/value pairs. If a value is a template parameter, like {imageThumbnail} in above example, it will be replaced with real image thumbnail data.

This policy is optional. If not set, image search request will be sent using the GET method.

This policy is only respected if the 'DefaultSearchProviderEnabled' policy is enabled.

Example value: content={imageThumbnail},url={imageURL},sbisrc={SearchSource}</string><string id="DeprecatedPolicies_group">Deprecated policies</string><string id="RemoteAccessClientFirewallTraversal">Enable firewall traversal from remote access client</string><string id="RemoteAccessClientFirewallTraversal_Explain">This policy is deprecated. Its usage is discouraged. Read more at https://support.google.com/chrome/a/answer/7643500</string><string id="RemoteAccessHostClientDomain">Configure the required domain name for remote access clients</string><string id="RemoteAccessHostClientDomain_Explain">This policy is deprecated. Its usage is discouraged. Read more at https://support.google.com/chrome/a/answer/7643500

Example value: my-awesome-domain.com</string><string id="RemoteAccessHostDomain">Configure the required domain name for remote access hosts</string><string id="RemoteAccessHostDomain_Explain">This policy is deprecated. Its usage is discouraged. Read more at https://support.google.com/chrome/a/answer/7643500

Example value: my-awesome-domain.com</string><string id="RemoteAccessHostRequireTwoFactor">Enable two-factor authentication for remote access hosts</string><string id="RemoteAccessHostRequireTwoFactor_Explain">This policy is deprecated. Its usage is discouraged. Read more at https://support.google.com/chrome/a/answer/7643500</string><string id="PasswordManagerAllowShowPasswords">Allow users to show passwords in Password Manager (deprecated)</string><string id="PasswordManagerAllowShowPasswords_Explain">This policy is deprecated. Its usage is discouraged. Read more at https://support.google.com/chrome/a/answer/7643500</string><string id="ProxyServerMode">Choose how to specify proxy server settings</string><string id="ProxyServerMode_Explain">This policy is deprecated. Its usage is discouraged. Read more at https://support.google.com/chrome/a/answer/7643500</string><string id="ProxyServerMode_ProxyServerDisabled">Never use a proxy</string><string id="ProxyServerMode_ProxyServerAutoDetect">Auto detect proxy settings</string><string id="ProxyServerMode_ProxyServerManual">Manually specify proxy settings</string><string id="ProxyServerMode_ProxyServerUseSystem">Use system proxy settings</string><string id="DefaultSearchProviderInstantURL">Default search provider instant URL</string><string id="DefaultSearchProviderInstantURL_Explain">This policy is deprecated. Its usage is discouraged. Read more at https://support.google.com/chrome/a/answer/7643500

Example value: https://search.my.company/suggest?q={searchTerms}</string><string id="DefaultSearchProviderSearchTermsReplacementKey">Parameter controlling search term placement for the default search provider</string><string id="DefaultSearchProviderSearchTermsReplacementKey_Explain">This policy is deprecated. Its usage is discouraged. Read more at https://support.google.com/chrome/a/answer/7643500

Example value: espv</string><string id="DefaultSearchProviderInstantURLPostParams">Parameters for instant URL which uses POST</string><string id="DefaultSearchProviderInstantURLPostParams_Explain">This policy is deprecated. Its usage is discouraged. Read more at https://support.google.com/chrome/a/answer/7643500

Example value: q={searchTerms},ie=utf-8,oe=utf-8</string><string id="DefaultMediaStreamSetting">Default mediastream setting</string><string id="DefaultMediaStreamSetting_Explain">This policy is deprecated. Its usage is discouraged. Read more at https://support.google.com/chrome/a/answer/7643500</string><string id="DefaultMediaStreamSetting_BlockAccess">Do not allow any site to access the camera and microphone</string><string id="DefaultMediaStreamSetting_PromptOnAccess">Ask every time a site wants to access the camera and/or microphone</string><string id="SupervisedUserCreationEnabled">Enable creation of supervised users</string><string id="SupervisedUserCreationEnabled_Explain">This policy is deprecated. Its usage is discouraged. Read more at https://support.google.com/chrome/a/answer/7643500</string><string id="SafeBrowsingExtendedReportingOptInAllowed">Allow users to opt in to Safe Browsing extended reporting</string><string id="SafeBrowsingExtendedReportingOptInAllowed_Explain">This policy is deprecated. Its usage is discouraged. Read more at https://support.google.com/chrome/a/answer/7643500</string><string id="DnsPrefetchingEnabled">Enable network prediction</string><string id="DnsPrefetchingEnabled_Explain">This policy is deprecated. Its usage is discouraged. Read more at https://support.google.com/chrome/a/answer/7643500</string><string id="DisableSpdy">Disable SPDY protocol</string><string id="DisableSpdy_Explain">This policy is deprecated. Its usage is discouraged. Read more at https://support.google.com/chrome/a/answer/7643500</string><string id="DisabledSchemes">Disable URL protocol schemes</string><string id="DisabledSchemes_Explain">This policy is deprecated. Its usage is discouraged. Read more at https://support.google.com/chrome/a/answer/7643500

Example value:

file
https</string><string id="DisabledSchemesDesc">Disable URL protocol schemes</string><string id="JavascriptEnabled">Enable JavaScript</string><string id="JavascriptEnabled_Explain">This policy is deprecated. Its usage is discouraged. Read more at https://support.google.com/chrome/a/answer/7643500</string><string id="IncognitoEnabled">Enable Incognito mode</string><string id="IncognitoEnabled_Explain">This policy is deprecated. Its usage is discouraged. Read more at https://support.google.com/chrome/a/answer/7643500</string><string id="ForceSafeSearch">Force SafeSearch</string><string id="ForceSafeSearch_Explain">This policy is deprecated. Its usage is discouraged. Read more at https://support.google.com/chrome/a/answer/7643500</string><string id="ForceYouTubeSafetyMode">Force YouTube Safety Mode</string><string id="ForceYouTubeSafetyMode_Explain">This policy is deprecated. Its usage is discouraged. Read more at https://support.google.com/chrome/a/answer/7643500</string><string id="AutoFillEnabled">Enable AutoFill</string><string id="AutoFillEnabled_Explain">This policy is deprecated. Its usage is discouraged. Read more at https://support.google.com/chrome/a/answer/7643500</string><string id="DisabledPlugins">Specify a list of disabled plugins</string><string id="DisabledPlugins_Explain">This policy is deprecated. Its usage is discouraged. Read more at https://support.google.com/chrome/a/answer/7643500

Example value:

Java
Shockwave Flash
Chrome PDF Viewer</string><string id="DisabledPluginsDesc">Specify a list of disabled plugins</string><string id="EnabledPlugins">Specify a list of enabled plugins</string><string id="EnabledPlugins_Explain">This policy is deprecated. Its usage is discouraged. Read more at https://support.google.com/chrome/a/answer/7643500

Example value:

Java
Shockwave Flash
Chrome PDF Viewer</string><string id="EnabledPluginsDesc">Specify a list of enabled plugins</string><string id="DisabledPluginsExceptions">Specify a list of plugins that the user can enable or disable</string><string id="DisabledPluginsExceptions_Explain">This policy is deprecated. Its usage is discouraged. Read more at https://support.google.com/chrome/a/answer/7643500

Example value:

Java
Shockwave Flash
Chrome PDF Viewer</string><string id="DisabledPluginsExceptionsDesc">Specify a list of plugins that the user can enable or disable</string><string id="DisablePluginFinder">Specify whether the plugin finder should be disabled (deprecated)</string><string id="DisablePluginFinder_Explain">This policy is deprecated. Its usage is discouraged. Read more at https://support.google.com/chrome/a/answer/7643500</string><string id="SigninAllowed">Allow sign in to Google Chrome</string><string id="SigninAllowed_Explain">This policy is deprecated. Its usage is discouraged. Read more at https://support.google.com/chrome/a/answer/7643500</string><string id="EnableDeprecatedWebBasedSignin">Enable the old web-based signin flow</string><string id="EnableDeprecatedWebBasedSignin_Explain">This policy is deprecated. Its usage is discouraged. Read more at https://support.google.com/chrome/a/answer/7643500</string><string id="ClearSiteDataOnExit">Clear site data on browser shutdown (deprecated)</string><string id="ClearSiteDataOnExit_Explain">This policy is deprecated. Its usage is discouraged. Read more at https://support.google.com/chrome/a/answer/7643500</string><string id="DeveloperToolsDisabled">Disable Developer Tools</string><string id="DeveloperToolsDisabled_Explain">This policy is deprecated. Its usage is discouraged. Read more at https://support.google.com/chrome/a/answer/7643500</string><string id="InstantEnabled">Enable Instant</string><string id="InstantEnabled_Explain">This policy is deprecated. Its usage is discouraged. Read more at https://support.google.com/chrome/a/answer/7643500</string><string id="AlwaysAuthorizePlugins">Always runs plugins that require authorization (deprecated)</string><string id="AlwaysAuthorizePlugins_Explain">This policy is deprecated. Its usage is discouraged. Read more at https://support.google.com/chrome/a/answer/7643500</string><string id="HideWebStorePromo">Prevent app promotions from appearing on the new tab page</string><string id="HideWebStorePromo_Explain">This policy is deprecated. Its usage is discouraged. Read more at https://support.google.com/chrome/a/answer/7643500</string><string id="EnterpriseWebStoreURL">Enterprise web store URL (deprecated)</string><string id="EnterpriseWebStoreURL_Explain">This policy is deprecated. Its usage is discouraged. Read more at https://support.google.com/chrome/a/answer/7643500

Example value: https://company-intranet/chromeapps</string><string id="EnterpriseWebStoreName">Enterprise web store name (deprecated)</string><string id="EnterpriseWebStoreName_Explain">This policy is deprecated. Its usage is discouraged. Read more at https://support.google.com/chrome/a/answer/7643500

Example value: WidgCo Chrome Apps</string><string id="EnableCommonNameFallbackForLocalAnchors">Allow certificates issued by local trust anchors without subjectAlternativeName extension</string><string id="EnableCommonNameFallbackForLocalAnchors_Explain">This policy is deprecated. Its usage is discouraged. Read more at https://support.google.com/chrome/a/answer/7643500</string><string id="ForceBrowserSignin">Enable force sign in for Google Chrome</string><string id="ForceBrowserSignin_Explain">This policy is deprecated. Its usage is discouraged. Read more at https://support.google.com/chrome/a/answer/7643500</string><string id="SSLVersionFallbackMin">Minimum TLS version to fallback to</string><string id="SSLVersionFallbackMin_Explain">This policy is deprecated. Its usage is discouraged. Read more at https://support.google.com/chrome/a/answer/7643500

Example value: tls1.1</string><string id="SSLVersionFallbackMin_TLSv1_1">TLS 1.1</string><string id="SSLVersionFallbackMin_TLSv1_2">TLS 1.2</string><string id="RC4Enabled">Enable RC4 cipher suites in TLS</string><string id="RC4Enabled_Explain">This policy is deprecated. Its usage is discouraged. Read more at https://support.google.com/chrome/a/answer/7643500</string><string id="DHEEnabled">Enable DHE cipher suites in TLS</string><string id="DHEEnabled_Explain">This policy is deprecated. Its usage is discouraged. Read more at https://support.google.com/chrome/a/answer/7643500</string><string id="PacHttpsUrlStrippingEnabled">Enable PAC URL stripping (for https://)</string><string id="PacHttpsUrlStrippingEnabled_Explain">This policy is deprecated. Its usage is discouraged. Read more at https://support.google.com/chrome/a/answer/7643500</string><string id="UnsafelyTreatInsecureOriginAsSecure">Origins or hostname patterns for which restrictions on
insecure origins should not apply</string><string id="UnsafelyTreatInsecureOriginAsSecure_Explain">This policy is deprecated. Its usage is discouraged. Read more at https://support.google.com/chrome/a/answer/7643500

Example value:

http://testserver.example.com/
*.example.org</string><string id="UnsafelyTreatInsecureOriginAsSecureDesc">Origins or hostname patterns for which restrictions on
insecure origins should not apply</string><string id="MachineLevelUserCloudPolicyEnrollmentToken">The enrollment token of cloud policy on desktop</string><string id="MachineLevelUserCloudPolicyEnrollmentToken_Explain">This policy is deprecated. Its usage is discouraged. Read more at https://support.google.com/chrome/a/answer/7643500

Example value: 37185d02-e055-11e7-80c1-9a214cf093ae</string><string id="TabUnderAllowed">Allow sites to simultaneously navigate and open pop-ups</string><string id="TabUnderAllowed_Explain">This policy is deprecated. Its usage is discouraged. Read more at https://support.google.com/chrome/a/answer/7643500</string><string id="Extensions_group">Extensions</string><string id="ExtensionInstallBlacklist">Configure extension installation blacklist</string><string id="ExtensionInstallBlacklist_Explain">Allows you to specify which extensions the users can NOT install. Extensions already installed will be disabled if blacklisted, without a way for the user to enable them. Once an extension disabled due to the blacklist is removed from it, it will automatically get re-enabled.

A blacklist value of '*' means all extensions are blacklisted unless they are explicitly listed in the whitelist.

If this policy is left not set the user can install any extension in Google Chrome.

Example value:

extension_id1
extension_id2</string><string id="ExtensionInstallBlacklistDesc">Configure extension installation blacklist</string><string id="ExtensionInstallWhitelist">Configure extension installation whitelist</string><string id="ExtensionInstallWhitelist_Explain">Allows you to specify which extensions are not subject to the blacklist.

A blacklist value of * means all extensions are blacklisted and users can only install extensions listed in the whitelist.

By default, all extensions are whitelisted, but if all extensions have been blacklisted by policy, the whitelist can be used to override that policy.

Example value:

extension_id1
extension_id2</string><string id="ExtensionInstallWhitelistDesc">Configure extension installation whitelist</string><string id="ExtensionInstallForcelist">Configure the list of force-installed apps and extensions</string><string id="ExtensionInstallForcelist_Explain">Specifies a list of apps and extensions that are installed silently,
without user interaction, and which cannot be uninstalled nor
disabled by the user. All permissions requested by the
apps/extensions are granted implicitly, without user interaction,
including any additional permissions requested by future versions of
the app/extension. Furthermore, permissions are granted for the
enterprise.deviceAttributes and enterprise.platformKeys extension
APIs. (These two APIs are not available to apps/extensions that are
not force-installed.)

This policy takes precedence over a potentially conflicting ExtensionInstallBlacklist policy. If an app or extension that previously had been force-installed is removed from this list, it is automatically uninstalled by Google Chrome.

For Windows instances that are not joined to a Microsoft® Active Directory® domain, forced installation is limited to apps and extensions listed in the Chrome Web Store.

Note that the source code of any extension may be altered by users via Developer Tools (potentially rendering the extension dysfunctional). If this is a concern, the DeveloperToolsDisabled policy should be set.

Each list item of the policy is a string that contains an extension ID and, optionally, an &quot;update&quot; URL separated by a semicolon (;). The extension ID is the 32-letter string found e.g. on chrome://extensions when in developer mode. The &quot;update&quot; URL, if specified, should point to an Update Manifest XML document as described at https://developer.chrome.com/extensions/autoupdate. By default, the Chrome Web Store's update URL is used (which currently is &quot;https://clients2.google.com/service/update2/crx&quot;). Note that the &quot;update&quot; URL set in this policy is only used for the initial installation; subsequent updates of the extension employ the update URL indicated in the extension's manifest. Note also that specifying the &quot;update&quot; URL explicitly was mandatory in Google Chrome versions up to and including 67.

For example, aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa;https://clients2.google.com/service/update2/crx installs the extension with id aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa from the standard Chrome Web Store &quot;update&quot; URL. For more information about hosting extensions, see: https://developer.chrome.com/extensions/hosting.

If this policy is left not set, no apps or extensions are installed automatically and the user can uninstall any app or extension in Google Chrome.

Note that this policy doesn't apply to incognito mode.

Example value:

aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa;https://clients2.google.com/service/update2/crx
abcdefghijklmnopabcdefghijklmnop</string><string id="ExtensionInstallForcelistDesc">Configure the list of force-installed apps and extensions</string><string id="ExtensionInstallSources">Configure extension, app, and user script install sources</string><string id="ExtensionInstallSources_Explain">Allows you to specify which URLs are allowed to install extensions, apps, and themes.

Starting in Google Chrome 21, it is more difficult to install extensions, apps, and user scripts from outside the Chrome Web Store. Previously, users could click on a link to a *.crx file, and Google Chrome would offer to install the file after a few warnings. After Google Chrome 21, such files must be downloaded and dragged onto the Google Chrome settings page. This setting allows specific URLs to have the old, easier installation flow.

Each item in this list is an extension-style match pattern (see https://developer.chrome.com/extensions/match_patterns). Users will be able to easily install items from any URL that matches an item in this list. Both the location of the *.crx file and the page where the download is started from (i.e. the referrer) must be allowed by these patterns.

ExtensionInstallBlacklist takes precedence over this policy. That is, an extension on the blacklist won't be installed, even if it happens from a site on this list.

Example value:

https://corp.mycompany.com/*</string><string id="ExtensionInstallSourcesDesc">Configure extension, app, and user script install sources</string><string id="ExtensionAllowedTypes">Configure allowed app/extension types</string><string id="ExtensionAllowedTypes_Explain">Controls which app/extension types are allowed to be installed and limits runtime access.

This setting white-lists the allowed types of extension/apps that can be installed in Google Chrome and which hosts they can interact with. The value is a list of strings, each of which should be one of the following: &quot;extension&quot;, &quot;theme&quot;, &quot;user_script&quot;, &quot;hosted_app&quot;, &quot;legacy_packaged_app&quot;, &quot;platform_app&quot;. See the Google Chrome extensions documentation for more information on these types.

Note that this policy also affects extensions and apps to be force-installed via ExtensionInstallForcelist.

If this setting is configured, extensions/apps which have a type that is not on the list will not be installed.

If this settings is left not-configured, no restrictions on the acceptable extension/app types are enforced.

Prior to version 75 using multiple comma separated extension IDs is not supported and will be skipped. The rest of the policy will continue to apply.

Example value:

hosted_app</string><string id="ExtensionAllowedTypesDesc">Configure allowed app/extension types</string><string id="ExtensionAllowInsecureUpdates">Allow insecure algorithms in integrity checks on extension updates and installs</string><string id="ExtensionAllowInsecureUpdates_Explain">Google Chrome provides for the secure update and installation of extensions. However, the content of some extensions hosted outside of the Chrome Web Store may only be protected by insecure signing or hashing algorithms such as SHA1. When this policy is disabled, fresh installation of and updates to such extensions will not be permitted by Chrome (until the extension developers rebuild the extension with stronger algorithms). When this policy is enabled, installation and updates for such extensions will be permitted.

This will default to the enabled behavior when unset.
Starting in Google Chrome 75, this will default to the disabled behavior when unset.

Starting in Google Chrome 77, this policy will be ignored and treated as disabled.</string><string id="ExtensionSettings">Extension management settings</string><string id="ExtensionSettings_Explain">Configures extension management settings for Google Chrome.

This policy controls multiple settings, including settings controlled by any existing extension-related policies. This policy will override any legacy policies if both are set.

This policy maps an extension ID or an update URL to its configuration. With an extension ID, configuration will be applied to the specified extension only. A default configuration can be set for the special ID &quot;*&quot;, which will apply to all extensions that don't have a custom configuration set in this policy. With an update URL, configuration will be applied to all extensions with the exact update URL stated in manifest of this extension, as described at https://developer.chrome.com/extensions/autoupdate.

For Windows instances that are not joined to a Microsoft® Active Directory® domain, forced installation is limited to apps and extensions listed in the Chrome Web Store.

For a full description of possible settings and structure of this policy please visit https://www.chromium.org/administrators/policy-list-3/extension-settings-full


Example value:

{
  &quot;abcdefghijklmnopabcdefghijklmnop&quot;: {
    &quot;blocked_permissions&quot;: [
      &quot;history&quot;
    ], 
    &quot;installation_mode&quot;: &quot;allowed&quot;, 
    &quot;minimum_version_required&quot;: &quot;1.0.1&quot;
  }, 
  &quot;bcdefghijklmnopabcdefghijklmnopa&quot;: {
    &quot;runtime_blocked_hosts&quot;: [
      &quot;*://*.example.com&quot;
    ], 
    &quot;allowed_permissions&quot;: [
      &quot;downloads&quot;
    ], 
    &quot;update_url&quot;: &quot;https://example.com/update_url&quot;, 
    &quot;runtime_allowed_hosts&quot;: [
      &quot;*://good.example.com&quot;
    ], 
    &quot;installation_mode&quot;: &quot;force_installed&quot;
  }, 
  &quot;update_url:https://www.example.com/update.xml&quot;: {
    &quot;blocked_permissions&quot;: [
      &quot;wallpaper&quot;
    ], 
    &quot;allowed_permissions&quot;: [
      &quot;downloads&quot;
    ], 
    &quot;installation_mode&quot;: &quot;allowed&quot;
  }, 
  &quot;cdefghijklmnopabcdefghijklmnopab&quot;: {
    &quot;blocked_install_message&quot;: &quot;Custom error message.&quot;, 
    &quot;installation_mode&quot;: &quot;blocked&quot;
  }, 
  &quot;*&quot;: {
    &quot;blocked_permissions&quot;: [
      &quot;downloads&quot;, 
      &quot;bookmarks&quot;
    ], 
    &quot;installation_mode&quot;: &quot;blocked&quot;, 
    &quot;runtime_blocked_hosts&quot;: [
      &quot;*://*.example.com&quot;
    ], 
    &quot;blocked_install_message&quot;: &quot;Custom error message.&quot;, 
    &quot;allowed_types&quot;: [
      &quot;hosted_app&quot;
    ], 
    &quot;runtime_allowed_hosts&quot;: [
      &quot;*://good.example.com&quot;
    ], 
    &quot;install_sources&quot;: [
      &quot;https://company-intranet/chromeapps&quot;
    ]
  }, 
  &quot;defghijklmnopabcdefghijklmnopabc,efghijklmnopabcdefghijklmnopabcd&quot;: {
    &quot;blocked_install_message&quot;: &quot;Custom error message.&quot;, 
    &quot;installation_mode&quot;: &quot;blocked&quot;
  }
}</string><string id="UninstallBlacklistedExtensions">Uninstall blacklisted extensions</string><string id="UninstallBlacklistedExtensions_Explain">This will remove extensions appearing in the ExtensionInstallBlacklist or extensions appearing in ExtensionSettings that have the installation mode set to blocked and will purge local user data with it.  Refer to the extensions privacy policy or data retention policy to understand what may happen with the user data that is not stored locally.

When the policy is set to enabled, extensions that fall in the aforementioned lists (if already installed on a machine) will be removed from that machine in its entirety (including local user data).

When the policy is set to disabled or left unset, extensions that fall in the aforementioned lists (if already installed on a machine and existing in the blacklist ExtensionInstallBlacklist) will be disabled on the machine and not uninstalled.</string><string id="GoogleCast_group">Google Cast</string><string id="EnableMediaRouter">Enable Google Cast</string><string id="EnableMediaRouter_Explain">If this policy is set to true or is not set, Google Cast will be enabled, and users will be able to launch it from the app menu, page context menus, media controls on Cast-enabled websites, and (if shown) the Cast toolbar icon.

If this policy set to false, Google Cast will be disabled.</string><string id="ShowCastIconInToolbar">Show the Google Cast toolbar icon</string><string id="ShowCastIconInToolbar_Explain">If this policy is set to true, the Cast toolbar icon will always be shown on the toolbar or the overflow menu, and users will not be able to remove it.

If this policy is set to false or is not set, users will be able to pin or remove the icon via its contextual menu.

If the policy &quot;EnableMediaRouter&quot; is set to false, then this policy's value would have no effect, and the toolbar icon would not be shown.</string><string id="HTTPAuthentication_group">HTTP authentication</string><string id="AuthSchemes">Supported authentication schemes</string><string id="AuthSchemes_Explain">Specifies which HTTP authentication schemes are supported by Google Chrome.

Possible values are 'basic', 'digest', 'ntlm' and 'negotiate'. Separate multiple values with commas.

If this policy is left not set, all four schemes will be used.

Example value: basic,digest,ntlm,negotiate</string><string id="DisableAuthNegotiateCnameLookup">Disable CNAME lookup when negotiating Kerberos authentication</string><string id="DisableAuthNegotiateCnameLookup_Explain">Specifies whether the generated Kerberos SPN is based on the canonical DNS name or the original name entered.

If you enable this setting, CNAME lookup will be skipped and the server name will be used as entered.

If you disable this setting or leave it not set, the canonical name of the server will be determined via CNAME lookup.</string><string id="EnableAuthNegotiatePort">Include non-standard port in Kerberos SPN</string><string id="EnableAuthNegotiatePort_Explain">Specifies whether the generated Kerberos SPN should include a non-standard port.

If you enable this setting, and a non-standard port (i.e., a port other than 80 or 443) is entered, it will be included in the generated Kerberos SPN.

If you disable this setting or leave it not set, the generated Kerberos SPN will not include a port in any case.</string><string id="AuthServerWhitelist">Authentication server whitelist</string><string id="AuthServerWhitelist_Explain">Specifies which servers should be whitelisted for integrated authentication. Integrated authentication is only enabled when Google Chrome receives an authentication challenge from a proxy or from a server which is in this permitted list.

Separate multiple server names with commas. Wildcards (*) are allowed.

If you leave this policy not set Google Chrome will try to detect if a server is on the Intranet and only then will it respond to IWA requests.  If a server is detected as Internet then IWA requests from it will be ignored by Google Chrome.

Example value: *example.com,foobar.com,*baz</string><string id="AuthNegotiateDelegateWhitelist">Kerberos delegation server whitelist</string><string id="AuthNegotiateDelegateWhitelist_Explain">Servers that Google Chrome may delegate to.

Separate multiple server names with commas. Wildcards (*) are allowed.

If you leave this policy not set Google Chrome will not delegate user credentials even if a server is detected as Intranet.

Example value: foobar.example.com</string><string id="AllowCrossOriginAuthPrompt">Cross-origin HTTP Basic Auth prompts</string><string id="AllowCrossOriginAuthPrompt_Explain">Controls whether third-party sub-content on a page is allowed to pop-up an HTTP Basic Auth dialog box.

Typically this is disabled as a phishing defense. If this policy is not set, this is disabled and third-party sub-content will not be allowed to pop up a HTTP Basic Auth dialog box.</string><string id="BrowserSwitcher_group">Legacy Browser Support</string><string id="AlternativeBrowserPath">Alternative browser to launch for configured websites.</string><string id="AlternativeBrowserPath_Explain">This policy controls which command to use to open URLs in an alternative browser.

When this policy is left unset, a platform-specific default is used: Internet Explorer for Windows, or Safari for Mac OS X. On Linux, launching an alternative browser will fail when this is unset.

When this policy is set to one of ${ie}, ${firefox}, ${safari} or
${opera}, that browser will launch if it is installed. ${ie} is only
available on Windows, and ${safari} is only available on Windows and Mac
OS X.

When this policy is set to a file path, that file is used as an executable
file.

Example value: ${ie}</string><string id="AlternativeBrowserParameters">Command-line parameters for the alternative browser.</string><string id="AlternativeBrowserParameters_Explain">This policy controls command-line parameters to launch to the alternative browser.

When this policy is left unset, only the URL is passed as a command-line parameters.

When this policy is set to a list of strings, each string is passed to the alternative browser as a separate command-line parameters. On Windows, the parameters are joined with spaces. On Mac OS X and Linux, a parameter may contain spaces, and still be treated as a single parameter.

If an element contains ${url}, it gets replaced with the URL of the page to open.

If no element contains ${url}, the URL is appended at the end of the command line.

Environment variables are expanded. On Windows, %ABC% is replaced with the value of the ABC environment variable. On Mac OS X and Linux, ${ABC} is replaced with the value of the ABC environment variable.

Example value:

-foreground
-new-window
${url}
-profile
%HOME%\browser_profile</string><string id="AlternativeBrowserParametersDesc">Command-line parameters for the alternative browser.</string><string id="BrowserSwitcherChromePath">Path to Chrome for switching from the alternative browser.</string><string id="BrowserSwitcherChromePath_Explain">This policy controls the command to use to open URLs in Google Chrome when switching from Internet Explorer.

If the 'Legacy Browser Support' add-in for Internet Explorer is not installed, this policy has no effect.

When this policy is left unset, Internet Explorer will auto-detect Google Chrome's own executable path when launching Google Chrome from Internet Explorer.

When this policy is set, it will be used to launch Google Chrome when launching Google Chrome from Internet Explorer.

This policy can be set to an executable file path, or ${chrome} to auto-detect Chrome's install location.

Example value: ${chrome}</string><string id="BrowserSwitcherChromeParameters">Command-line parameters for switching from the alternative browser.</string><string id="BrowserSwitcherChromeParameters_Explain">This policy controls command-line parameters for Chrome from Internet Explorer.

If the 'Legacy Browser Support' add-in for Internet Explorer is not installed, this policy has no effect.

When this policy is left unset, Internet Explorer only passes the URL to Chrome as a command-line parameter.

When this policy is set to a list of strings, the strings are joined with spaces and passed to Chrome as command-line parameters.

If an element contains ${url}, it gets replaced with the URL of the page to open.

If no element contains ${url}, the URL is appended at the end of the command line.

Environment variables are expanded. On Windows, %ABC% is replaced with the value of the ABC environment variable.

Example value:

--force-dark-mode</string><string id="BrowserSwitcherChromeParametersDesc">Command-line parameters for switching from the alternative browser.</string><string id="BrowserSwitcherDelay">Delay before launching alternative browser (milliseconds)</string><string id="BrowserSwitcherDelay_Explain">This policy controls how long to wait before launching an alternative browser, in milliseconds.

When this policy is left unset, or set to 0, navigating to a designated URL immediately opens it in an alternative browser.

When this policy is set to a number, Chrome shows a message for that many milliseconds, and then opens the alternative browser.</string><string id="BrowserSwitcherEnabled">Enable the Legacy Browser Support feature.</string><string id="BrowserSwitcherEnabled_Explain">This policy controls whether to enable Legacy Browser Support.

When this policy is left unset, or is set to false, Chrome will not attempt to launch designated URLs in an alternate browser.

When this policy is set to true, Chrome will attempt to launch some URLs in an alternate browser (such as Internet Explorer). This feature is configured using the policies in the Legacy Browser support group.

This feature is a replacement for the 'Legacy Browser Support' extension. Configuration from the extension will carry over to this feature, but it is strongly advised to use the Chrome policies instead. This ensures better compatibility in the future.</string><string id="BrowserSwitcherExternalSitelistUrl">URL of an XML file that contains URLs to load in an alternative browser.</string><string id="BrowserSwitcherExternalSitelistUrl_Explain">This policy is a URL, that points to an XML file in the same format as Internet Explorer's SiteList policy. This loads rules from an XML file, without sharing those rules with Internet Explorer.

When this policy is left unset, or not set to a valid URL, Google Chrome does not use it as a source of rules for switching browsers.

When this policy is set to a valid URL, Google Chrome downloads the site list from that URL, and applies the rules as if they had been configured with the BrowserSwitcherUrlList policy.

For more information on Internet Explorer's SiteList policy: https://docs.microsoft.com/internet-explorer/ie11-deploy-guide/what-is-enterprise-mode

Example value: http://example.com/sitelist.xml</string><string id="BrowserSwitcherKeepLastChromeTab">Keep last tab open in Chrome.</string><string id="BrowserSwitcherKeepLastChromeTab_Explain">This policy controls whether to close Chrome completely when the last tab would switch to another browser.

When this policy is left unset, or is set to true, Chrome will keep at least one tab open, after switching to an alternate browser.

When this policy is set to false, Chrome will close the tab after switching to an alternate browser, even if it was the last tab. This will cause Chrome to exit completely.</string><string id="BrowserSwitcherUrlList">Websites to open in alternative browser</string><string id="BrowserSwitcherUrlList_Explain">This policy controls the list of websites to open in an alternative browser.

Note that elements can also be added to this list through the BrowserSwitcherUseIeSitelist and BrowserSwitcherExternalSitelistUrl policies.

When this policy is left unset, no websites are added to the list.

When this policy is set, each item is treated as a rule for something to open in an alternative browser. Google Chrome uses those rules when choosing if a URL should open in an alternative browser.

When the Internet Explorer add-in is present and enabled, Internet Explorer switches back to Google Chrome when the rules do not match.

If rules contradict eachother, Google Chrome uses the most specific rule.

Example value:

ie.com
!open-in-chrome.ie.com
foobar.com/ie-only/</string><string id="BrowserSwitcherUrlListDesc">Websites to open in alternative browser</string><string id="BrowserSwitcherUrlGreylist">Websites that should never trigger a browser switch.</string><string id="BrowserSwitcherUrlGreylist_Explain">This policy controls the list of websites that will never cause a browser switch.

Note that elements can also be added to this list through the BrowserSwitcherUseIeSitelist and BrowserSwitcherExternalSitelistUrl policies.

When this policy is left unset, no websites are added to the list.

When this policy is set, each item is treated as a rule, similar to the BrowserSwitcherUrlList policy. However, the logic is reversed: rules that match will not open an alternative browser.

Unlike BrowserSwitcherUrlList, rules apply to both directions. That is, when the Internet Explorer add-in is present and enabled, it also controls whether Internet Explorer should open these URLs in Google Chrome.

Example value:

ie.com
!open-in-chrome.ie.com
foobar.com/ie-only/</string><string id="BrowserSwitcherUrlGreylistDesc">Websites that should never trigger a browser switch.</string><string id="BrowserSwitcherUseIeSitelist">Use Internet Explorer's SiteList policy for Legacy Browser Support.</string><string id="BrowserSwitcherUseIeSitelist_Explain">This policy controls whether to load rules from Internet Explorer's SiteList policy.

When this policy is left unset, or set to false, Google Chrome does not use Internet Explorer's SiteList policy as a source of rules for switching browsers.

When this policy is set to true, Google Chrome reads Internet Explorer's SiteList to obtain the site list's URL. Google Chrome then downloads the site list from that URL, and applies the rules as if they had been configured with the BrowserSwitcherUrlList policy.

For more information on Internet Explorer's SiteList policy: https://docs.microsoft.com/internet-explorer/ie11-deploy-guide/what-is-enterprise-mode</string><string id="NativeMessaging_group">Native Messaging</string><string id="NativeMessagingBlacklist">Configure native messaging blacklist</string><string id="NativeMessagingBlacklist_Explain">Allows you to specify which native messaging hosts that should not be loaded.

A blacklist value of '*' means all native messaging hosts are blacklisted unless they are explicitly listed in the whitelist.

If this policy is left not set Google Chrome will load all installed native messaging hosts.

Example value:

com.native.messaging.host.name1
com.native.messaging.host.name2</string><string id="NativeMessagingBlacklistDesc">Configure native messaging blacklist</string><string id="NativeMessagingWhitelist">Configure native messaging whitelist</string><string id="NativeMessagingWhitelist_Explain">Allows you to specify which native messaging hosts are not subject to the blacklist.

A blacklist value of * means all native messaging hosts are blacklisted and only native messaging hosts listed in the whitelist will be loaded.

By default, all native messaging hosts are whitelisted, but if all native messaging hosts have been blacklisted by policy, the whitelist can be used to override that policy.

Example value:

com.native.messaging.host.name1
com.native.messaging.host.name2</string><string id="NativeMessagingWhitelistDesc">Configure native messaging whitelist</string><string id="NativeMessagingUserLevelHosts">Allow user-level Native Messaging hosts (installed without admin permissions)</string><string id="NativeMessagingUserLevelHosts_Explain">Enables user-level installation of Native Messaging hosts.

If this setting is enabled then Google Chrome allows usage of Native Messaging hosts installed on user level.

If this setting is disabled then Google Chrome will only use Native Messaging hosts installed on system level.

If this setting is left not set Google Chrome will allow usage of user-level Native Messaging hosts.</string><string id="PasswordManager_group">Password manager</string><string id="PasswordManagerEnabled">Enable saving passwords to the password manager</string><string id="PasswordManagerEnabled_Explain">If this setting is enabled, users can have Google Chrome memorize passwords and provide them automatically the next time they log in to a site.

If this settings is disabled, users cannot save new passwords but they
may still use passwords that have been saved previously.

If this policy is enabled or disabled, users cannot change or override it in Google Chrome. If this policy is unset, password saving is allowed (but can be turned off by the user).</string><string id="Printing_group">Printing</string><string id="PrintingEnabled">Enable printing</string><string id="PrintingEnabled_Explain">Enables printing in Google Chrome and prevents users from changing this setting.

If this setting is enabled or not configured, users can print.

If this setting is disabled, users cannot print from Google Chrome. Printing is disabled in the wrench menu, extensions, JavaScript applications, etc. It is still possible to print from plugins that bypass Google Chrome while printing. For example, certain Flash applications have the print option in their context menu, which is not covered by this policy.</string><string id="CloudPrintProxyEnabled">Enable Google Cloud Print proxy</string><string id="CloudPrintProxyEnabled_Explain">Enables Google Chrome to act as a proxy between Google Cloud Print and legacy printers connected to the machine.

If this setting is enabled or not configured, users can enable the cloud print proxy by authentication with their Google account.

If this setting is disabled, users cannot enable the proxy, and the machine will not be allowed to share it's printers with Google Cloud Print.</string><string id="CloudPrintSubmitEnabled">Enable submission of documents to Google Cloud Print</string><string id="CloudPrintSubmitEnabled_Explain">Enables Google Chrome to submit documents to Google Cloud Print for printing.  NOTE: This only affects Google Cloud Print support in Google Chrome.  It does not prevent users from submitting print jobs on web sites.

If this setting is enabled or not configured, users can print to Google Cloud Print from the Google Chrome print dialog.

If this setting is disabled, users cannot print to Google Cloud Print from the Google Chrome print dialog</string><string id="DisablePrintPreview">Disable Print Preview</string><string id="DisablePrintPreview_Explain">Show the system print dialog instead of print preview.

When this setting is enabled, Google Chrome will open the system print dialog instead of the built-in print preview when a user requests a page to be printed.

If this policy is not set or is set to false, print commands trigger the print preview screen.</string><string id="PrintHeaderFooter">Print Headers and Footers</string><string id="PrintHeaderFooter_Explain">Force 'headers and footers' to be on or off in the printing dialog.

If the policy is unset, the user can decide whether to print headers and footers.

If the policy is set to false, 'Headers and footers' is not selected in the print preview dialog, and the user cannot change it.

If the policy is set to true, 'Headers and footers' is selected in the print preview dialog, and the user cannot change it.</string><string id="DefaultPrinterSelection">Default printer selection rules</string><string id="DefaultPrinterSelection_Explain">Overrides Google Chrome default printer selection rules.

This policy determines the rules for selecting the default printer in Google Chrome which happens the first time the print function is used with a profile.

When this policy is set, Google Chrome will attempt to find a printer matching all of the specified attributes, and select it as default printer. The first printer found matching the policy is selected, in case of non-unique match any matching printer can be selected, depending on the order printers are discovered.

If this policy is not set or matching printer is not found within the timeout, the printer defaults to built-in PDF printer or no printer selected, when PDF printer is not available.

The value is parsed as JSON object, conforming to the following schema:
{
  &quot;type&quot;: &quot;object&quot;,
  &quot;properties&quot;: {
    &quot;kind&quot;: {
      &quot;description&quot;: &quot;Whether to limit the search of the matching printer to a specific set of printers.&quot;,
      &quot;type&quot;: &quot;string&quot;,
      &quot;enum&quot;: [ &quot;local&quot;, &quot;cloud&quot; ]
    },
    &quot;idPattern&quot;: {
      &quot;description&quot;: &quot;Regular expression to match printer id.&quot;,
      &quot;type&quot;: &quot;string&quot;
    },
    &quot;namePattern&quot;: {
      &quot;description&quot;: &quot;Regular expression to match printer display name.&quot;,
      &quot;type&quot;: &quot;string&quot;
    }
  }
}

Printers connected to Google Cloud Print are considered &quot;cloud&quot;, the rest of the printers are classified as &quot;local&quot;.
Omitting a field means all values match, for example, not specifying connectivity will cause Print Preview to initiate the discovery of all kinds of printers, local and cloud.
Regular expression patterns must follow the JavaScript RegExp syntax and matches are case sensistive.

Example value: { &quot;kind&quot;: &quot;cloud&quot;, &quot;idPattern&quot;: &quot;.*public&quot;, &quot;namePattern&quot;: &quot;.*Color&quot; }</string><string id="PrintPreviewUseSystemDefaultPrinter">Use System Default Printer as Default</string><string id="PrintPreviewUseSystemDefaultPrinter_Explain">Causes Google Chrome to use the system default printer as the default choice in Print Preview instead of the most recently used printer.

If you disable this setting or do not set a value, Print Preview will use the most recently used printer as the default destination choice.

If you enable this setting, Print Preview will use the OS system default printer as the default destination choice.</string><string id="Proxy_group">Proxy server</string><string id="ProxyMode">Choose how to specify proxy server settings</string><string id="ProxyMode_Explain">Allows you to specify the proxy server used by Google Chrome and prevents users from changing proxy settings.

This policy only takes effect if the ProxySettings policy has not been specified.

If you choose to never use a proxy server and always connect directly, all other options are ignored.

If you choose to use system proxy settings, all other options are ignored.

If you choose to auto detect the proxy server, all other options are ignored.

If you choose fixed server proxy mode, you can specify further options in 'Address or URL of proxy server' and 'Comma-separated list of proxy bypass rules'. Only the HTTP proxy server with the highest priority is available for ARC-apps.

If you choose to use a .pac proxy script, you must specify the URL to the script in 'URL to a proxy .pac file'.

For detailed examples, visit:
https://www.chromium.org/developers/design-documents/network-settings#TOC-Command-line-options-for-proxy-sett.

If you enable this setting, Google Chrome and ARC-apps ignore all proxy-related options specified from the command line.

Leaving this policy not set will allow the users to choose the proxy settings on their own.

Example value: direct</string><string id="ProxyMode_ProxyDisabled">Never use a proxy</string><string id="ProxyMode_ProxyAutoDetect">Auto detect proxy settings</string><string id="ProxyMode_ProxyPacScript">Use a .pac proxy script</string><string id="ProxyMode_ProxyFixedServers">Use fixed proxy servers</string><string id="ProxyMode_ProxyUseSystem">Use system proxy settings</string><string id="ProxyServer">Address or URL of proxy server</string><string id="ProxyServer_Explain">You can specify the URL of the proxy server here.

This policy only takes effect if you have selected manual proxy settings at 'Choose how to specify proxy server settings' and if the ProxySettings policy has not been specified.

You should leave this policy not set if you have selected any other mode for setting proxy policies.

For more options and detailed examples, visit:
https://www.chromium.org/developers/design-documents/network-settings#TOC-Command-line-options-for-proxy-sett.

Example value: 123.123.123.123:8080</string><string id="ProxyPacUrl">URL to a proxy .pac file</string><string id="ProxyPacUrl_Explain">You can specify a URL to a proxy .pac file here.

This policy only takes effect if you have selected manual proxy settings at 'Choose how to specify proxy server settings' and if the ProxySettings policy has not been specified.

You should leave this policy not set if you have selected any other mode for setting proxy policies.

For detailed examples, visit:
https://www.chromium.org/developers/design-documents/network-settings#TOC-Command-line-options-for-proxy-sett.

Example value: https://internal.site/example.pac</string><string id="ProxyBypassList">Proxy bypass rules</string><string id="ProxyBypassList_Explain">Google Chrome will bypass any proxy for the list of hosts given here.

This policy only takes effect if you have selected manual proxy settings at 'Choose how to specify proxy server settings' and if the ProxySettings policy has not been specified.

You should leave this policy not set if you have selected any other mode for setting proxy policies.

For more detailed examples, visit:
https://www.chromium.org/developers/design-documents/network-settings#TOC-Command-line-options-for-proxy-sett.

Example value: https://www.example1.com,https://www.example2.com,https://internalsite/</string><string id="RemoteAccess_group">Remote access</string><string id="RemoteAccessHostClientDomainList">Configure the required domain names for remote access clients</string><string id="RemoteAccessHostClientDomainList_Explain">Configures the required client domain names that will be imposed on remote access clients and prevents users from changing it.

If this setting is enabled, then only clients from one of the specified domains can connect to the host.

If this setting is disabled or not set, then the default policy for the connection type is applied. For remote assistance, this allows clients from any domain to connect to the host; for anytime remote access, only the host owner can connect.

This setting will override RemoteAccessHostClientDomain, if present.

See also RemoteAccessHostDomainList.

Example value:

my-awesome-domain.com
my-auxiliary-domain.com</string><string id="RemoteAccessHostClientDomainListDesc">Configure the required domain names for remote access clients</string><string id="RemoteAccessHostFirewallTraversal">Enable firewall traversal from remote access host</string><string id="RemoteAccessHostFirewallTraversal_Explain">Enables usage of STUN servers when remote clients are trying to establish a connection to this machine.

If this setting is enabled, then remote clients can discover and connect to this machines even if they are separated by a firewall.

If this setting is disabled and outgoing UDP connections are filtered by the firewall, then this machine will only allow connections from client machines within the local network.

If this policy is left not set the setting will be enabled.</string><string id="RemoteAccessHostDomainList">Configure the required domain names for remote access hosts</string><string id="RemoteAccessHostDomainList_Explain">Configures the required host domain names that will be imposed on remote access hosts and prevents users from changing it.

If this setting is enabled, then hosts can be shared only using accounts registered on one of the specified domain names.

If this setting is disabled or not set, then hosts can be shared using any account.

This setting will override RemoteAccessHostDomain, if present.

See also RemoteAccessHostClientDomainList.

Example value:

my-awesome-domain.com
my-auxiliary-domain.com</string><string id="RemoteAccessHostDomainListDesc">Configure the required domain names for remote access hosts</string><string id="RemoteAccessHostTalkGadgetPrefix">Configure the TalkGadget prefix for remote access hosts</string><string id="RemoteAccessHostTalkGadgetPrefix_Explain">Configures the TalkGadget prefix that will be used by remote access hosts and prevents users from changing it.

If specified, this prefix is prepended to the base TalkGadget name to create a full domain name for the TalkGadget. The base TalkGadget domain name is '.talkgadget.google.com'.

If this setting is enabled, then hosts will use the custom domain name when accessing the TalkGadget instead of the default domain name.

If this setting is disabled or not set, then the default TalkGadget domain name ('chromoting-host.talkgadget.google.com') will be used for all hosts.

Remote access clients are not affected by this policy setting. They will always use 'chromoting-client.talkgadget.google.com' to access the TalkGadget.

Example value: chromoting-host</string><string id="RemoteAccessHostRequireCurtain">Enable curtaining of remote access hosts</string><string id="RemoteAccessHostRequireCurtain_Explain">Enables curtaining of remote access hosts while a connection is in progress.

If this setting is enabled, then hosts' physical input and output devices are disabled while a remote connection is in progress.

If this setting is disabled or not set, then both local and remote users can interact with the host when it is being shared.</string><string id="RemoteAccessHostAllowClientPairing">Enable or disable PIN-less authentication for remote access hosts</string><string id="RemoteAccessHostAllowClientPairing_Explain">If this setting is enabled or not configured, then users can opt to pair clients and hosts at connection time, eliminating the need to enter a PIN every time.

If this setting is disabled, then this feature will not be available.</string><string id="RemoteAccessHostAllowGnubbyAuth">Allow gnubby authentication for remote access hosts</string><string id="RemoteAccessHostAllowGnubbyAuth_Explain">If this setting is enabled, then gnubby authentication requests will be proxied across a remote host connection.

If this setting is disabled or not configured, gnubby authentication requests will not be proxied.</string><string id="RemoteAccessHostAllowRelayedConnection">Enable the use of relay servers by the remote access host</string><string id="RemoteAccessHostAllowRelayedConnection_Explain">Enables usage of relay servers when remote clients are trying to establish a connection to this machine.

If this setting is enabled, then remote clients can use relay servers to connect to this machine when a direct connection is not available (e.g. due to firewall restrictions).

Note that if the policy RemoteAccessHostFirewallTraversal is disabled, this policy will be ignored.

If this policy is left not set the setting will be enabled.</string><string id="RemoteAccessHostUdpPortRange">Restrict the UDP port range used by the remote access host</string><string id="RemoteAccessHostUdpPortRange_Explain">Restricts the UDP port range used by the remote access host in this machine.

If this policy is left not set, or if it is set to an empty string, the remote access host will be allowed to use any available port, unless the policy RemoteAccessHostFirewallTraversal is disabled, in which case the remote access host will use UDP ports in the 12400-12409 range.

Example value: 12400-12409</string><string id="RemoteAccessHostTokenUrl">URL where remote access clients should obtain their authentication token</string><string id="RemoteAccessHostTokenUrl_Explain">If this policy is set, the remote access host will require authenticating clients to obtain an authentication token from this URL in order to connect. Must be used in conjunction with RemoteAccessHostTokenValidationUrl.

This feature is currently disabled server-side.

Example value: https://example.com/issue</string><string id="RemoteAccessHostTokenValidationUrl">URL for validating remote access client authentication token</string><string id="RemoteAccessHostTokenValidationUrl_Explain">If this policy is set, the remote access host will use this URL to validate authentication tokens from remote access clients, in order to accept connections. Must be used in conjunction with RemoteAccessHostTokenUrl.

This feature is currently disabled server-side.

Example value: https://example.com/validate</string><string id="RemoteAccessHostTokenValidationCertificateIssuer">Client certificate for connecting to RemoteAccessHostTokenValidationUrl</string><string id="RemoteAccessHostTokenValidationCertificateIssuer_Explain">If this policy is set, the host will use a client certificate with the given issuer CN to authenticate to RemoteAccessHostTokenValidationUrl. Set it to &quot;*&quot; to use any available client certificate.

This feature is currently disabled server-side.

Example value: Example Certificate Authority</string><string id="RemoteAccessHostAllowUiAccessForRemoteAssistance">Allow remote users to interact with elevated windows in remote assistance sessions</string><string id="RemoteAccessHostAllowUiAccessForRemoteAssistance_Explain">If this setting is enabled, the remote assistance host will be run in a process with uiAccess permissions.  This will allow remote users to interact with elevated windows on the local user's desktop.

If this setting is disabled or not configured, the remote assistance host will run in the user's context and remote users cannot interact with elevated windows on the desktop.</string><string id="RemoteAccessHostAllowFileTransfer">Allow remote access users to transfer files to/from the host</string><string id="RemoteAccessHostAllowFileTransfer_Explain">Controls the ability of a user connected to a remote access host to transfer files between the client and the host. This does not apply to remote assistance connections, which do not support file transfer.

If this setting is disabled, file transfer will not be allowed. If this setting is enabled or not set, file transfer will be allowed.</string><string id="SafeBrowsing_group">Safe Browsing settings</string><string id="SafeBrowsingEnabled">Enable Safe Browsing</string><string id="SafeBrowsingEnabled_Explain">Enables Google Chrome's Safe Browsing feature and prevents users from changing this setting.

If you enable this setting, Safe Browsing is always active.

If you disable this setting, Safe Browsing is never active.

If you enable or disable this setting, users cannot change or override the &quot;Enable phishing and malware protection&quot; setting in Google Chrome.

If this policy is left not set, this will be enabled but the user will be able to change it.

See https://developers.google.com/safe-browsing for more info on Safe Browsing.

This policy is available only on Windows instances that are joined to a Microsoft® Active Directory® domain. or Windows 10 Pro or Enterprise instances that enrolled for device management.</string><string id="SafeBrowsingExtendedReportingEnabled">Enable Safe Browsing Extended Reporting</string><string id="SafeBrowsingExtendedReportingEnabled_Explain">Enables Google Chrome's Safe Browsing Extended Reporting and prevents users from changing this setting.

Extended Reporting sends some system information and page content to Google servers to help detect dangerous apps and sites.

If the setting is set to true, then reports will be created and sent whenever necessary (such as when a security interstitial is shown).

If the setting is set to false, reports will never be sent.

If this policy is set to true or false, the user will not be able to modify the setting.

If this policy is left unset, the user will be able to change the setting and decide whether to send reports or not.

See https://developers.google.com/safe-browsing for more info on Safe Browsing.</string><string id="SafeBrowsingWhitelistDomains">Configure the list of domains on which Safe Browsing will not trigger warnings.</string><string id="SafeBrowsingWhitelistDomains_Explain">Configure the list of domains which Safe Browsing will trust. This means:
Safe Browsing will not check for dangerous resources (e.g. phishing, malware, or unwanted software) if their URLs match these domains.
Safe Browsing's download protection service will not check downloads hosted on these domains.
Safe Browsing's password protection service will not check for password reuse if the page URL matches these domains.

If this setting is enabled, then Safe Browsing will trust these domains.
If this setting is disabled or not set, then default Safe Browsing protection is applied to all resources.
This policy is available only on Windows instances that are joined to a Microsoft® Active Directory® domain. or Windows 10 Pro or Enterprise instances that enrolled for device management.

Example value:

mydomain.com
myuniversity.edu</string><string id="SafeBrowsingWhitelistDomainsDesc">Configure the list of domains on which Safe Browsing will not trigger warnings.</string><string id="PasswordProtectionWarningTrigger">Password protection warning trigger</string><string id="PasswordProtectionWarningTrigger_Explain">Allows you to control the triggering of password protection warning. Password protection alerts users when they reuse their protected password on potentially suspicious sites.

You can use 'PasswordProtectionLoginURLs' and 'PasswordProtectionChangePasswordURL' policies to configure which password to protect.

If this policy is set to 'PasswordProtectionWarningOff', no password protection warning will be shown.
If this policy is set to 'PasswordProtectionWarningOnPasswordReuse', password protection warning will be shown when the user reuses their protected password on a non-whitelisted site.
If this policy is set to 'PasswordProtectionWarningOnPhishingReuse', password protection warning will be shown when the user reuses their protected password on a phishing site.
If this policy is left unset, password protection service will only protect Google passwords but the user will be able to change this setting.</string><string id="PasswordProtectionWarningTrigger_PasswordProtectionWarningOff">Password protection warning is off</string><string id="PasswordProtectionWarningTrigger_PasswordProtectionWarningOnPasswordReuse">Password protection warning is triggered by password reuse</string><string id="PasswordProtectionWarningTrigger_PasswordProtectionWarningOnPhishingReuse">Password protection warning is triggered by password reuse on phishing page</string><string id="PasswordProtectionLoginURLs">Configure the list of enterprise login URLs where password protection service should capture fingerprint of password.</string><string id="PasswordProtectionLoginURLs_Explain">Configure the list of enterprise login URLs (HTTP and HTTPS schemes only). Fingerprint of password will be captured on these URLs and used for password reuse detection.
In order for Google Chrome to correctly capture password fingerprints, please make sure your login pages follow the guidelines on https://www.chromium.org/developers/design-documents/create-amazing-password-forms.

If this setting is enabled, then password protection service will capture fingerprint of password on these URLs for password reuse detection purpose.
If this setting is disabled or not set, then password protection service will only capture password fingerprint on https://accounts.google.com.
This policy is available only on Windows instances that are joined to a Microsoft® Active Directory® domain. or Windows 10 Pro or Enterprise instances that enrolled for device management.

Example value:

https://mydomain.com/login.html
https://login.mydomain.com</string><string id="PasswordProtectionLoginURLsDesc">Configure the list of enterprise login URLs where password protection service should capture fingerprint of password.</string><string id="PasswordProtectionChangePasswordURL">Configure the change password URL.</string><string id="PasswordProtectionChangePasswordURL_Explain">Configure the change password URL (HTTP and HTTPS schemes only). Password protection service will send users to this URL to change their password after seeing a warning in the browser.
In order for Google Chrome to correctly capture the new password fingerprint on this change password page, please make sure your change password page follows the guidelines on https://www.chromium.org/developers/design-documents/create-amazing-password-forms.

If this setting is enabled, then password protection service will send users to this URL to change their password after seeing a warning in the browser.
If this setting is disabled or not set, then password protection service will send users to https://myaccounts.google.com to change their password.
This policy is available only on Windows instances that are joined to a Microsoft® Active Directory® domain. or Windows 10 Pro or Enterprise instances that enrolled for device management.

Example value: https://mydomain.com/change_password.html</string><string id="Startup_group">Startup, Home page and New Tab page</string><string id="ShowHomeButton">Show Home button on toolbar</string><string id="ShowHomeButton_Explain">Shows the Home button on Google Chrome's toolbar.

If you enable this setting, the Home button is always shown.

If you disable this setting, the Home button is never shown.

If you enable or disable this setting, users cannot change or override this setting in Google Chrome.

Leaving this policy not set will allow the user to choose whether to show the home button.</string><string id="HomepageLocation">Configure the home page URL</string><string id="HomepageLocation_Explain">Configures the default home page URL in Google Chrome and prevents users from changing it.

The home page is the page opened by the Home button. The pages that open on startup are controlled by the RestoreOnStartup policies.

The home page type can either be set to a URL you specify here or set to the New Tab Page. If you select the New Tab Page, then this policy does not take effect.

If you enable this setting, users cannot change their home page URL in Google Chrome, but they can still choose the New Tab Page as their home page.

Leaving this policy not set will allow the user to choose their home page on their own if HomepageIsNewTabPage is not set too.

The URL must have a standard scheme, e.g. &quot;http://example.com&quot; or &quot;https://example.com&quot;.

This policy is available only on Windows instances that are joined to a Microsoft® Active Directory® domain. or Windows 10 Pro or Enterprise instances that enrolled for device management.

Example value: https://www.chromium.org</string><string id="HomepageIsNewTabPage">Use New Tab Page as homepage</string><string id="HomepageIsNewTabPage_Explain">Configures the type of the default home page in Google Chrome and prevents users from changing home page preferences. The home page can either be set to a URL you specify or set to the New Tab Page.

If you enable this setting, the New Tab Page is always used for the home page, and the home page URL location is ignored.

If you disable this setting, the user's homepage will never be the New Tab Page, unless its URL is set to 'chrome://newtab'.

If you enable or disable this setting, users cannot change their homepage type in Google Chrome.

Leaving this policy not set will allow the user to choose whether the new tab page is their home page on their own.

This policy is available only on Windows instances that are joined to a Microsoft® Active Directory® domain. or Windows 10 Pro or Enterprise instances that enrolled for device management.</string><string id="NewTabPageLocation">Configure the New Tab page URL</string><string id="NewTabPageLocation_Explain">Configures the default New Tab page URL and prevents users from changing it.

The New Tab page is the page opened when new tabs are created (including the one opened in new windows).

This policy does not decide which pages are to be opened on start up. Those are controlled by the RestoreOnStartup policies. Yet this policy does affect the Home Page if that is set to open the New Tab page, as well as the startup page if that is set to open the New Tab page.

If the policy is not set or left empty the default new tab page is used.

This policy is available only on Windows instances that are joined to a Microsoft® Active Directory® domain. or Windows 10 Pro or Enterprise instances that enrolled for device management.

Example value: https://www.chromium.org</string><string id="RestoreOnStartup">Action on startup</string><string id="RestoreOnStartup_Explain">Allows you to specify the behavior on startup.

If you choose 'Open New Tab Page' the New Tab Page will always be opened when you start Google Chrome.

If you choose 'Restore the last session', the URLs that were open last time Google Chrome was closed will be reopened and the browsing session will be restored as it was left.
Choosing this option disables some settings that rely on sessions or that perform actions on exit (such as Clear browsing data on exit or session-only cookies).

If you choose 'Open a list of URLs', the list of 'URLs to open on startup' will be opened when a user starts Google Chrome.

If you enable this setting, users cannot change or override it in Google Chrome.

Disabling this setting is equivalent to leaving it not configured. The user will still be able to change it in Google Chrome.

This policy is available only on Windows instances that are joined to a Microsoft® Active Directory® domain. or Windows 10 Pro or Enterprise instances that enrolled for device management.</string><string id="RestoreOnStartup_RestoreOnStartupIsNewTabPage">Open New Tab Page</string><string id="RestoreOnStartup_RestoreOnStartupIsLastSession">Restore the last session</string><string id="RestoreOnStartup_RestoreOnStartupIsURLs">Open a list of URLs</string><string id="RestoreOnStartupURLs">URLs to open on startup</string><string id="RestoreOnStartupURLs_Explain">If 'Open a list of URLs' is selected as the startup action, this allows you to specify the list of URLs that are opened. If left not set no URL will be opened on start up.

This policy only works if the 'RestoreOnStartup' policy is set to 'RestoreOnStartupIsURLs'.

This policy is available only on Windows instances that are joined to a Microsoft® Active Directory® domain. or Windows 10 Pro or Enterprise instances that enrolled for device management.

Example value:

https://example.com
https://www.chromium.org</string><string id="RestoreOnStartupURLsDesc">URLs to open on startup</string><string id="AbusiveExperienceInterventionEnforce">Abusive Experience Intervention Enforce</string><string id="AbusiveExperienceInterventionEnforce_Explain">Allows you to set whether sites with abusive experiences should be prevented from opening new windows or tabs.

If this policy is set to True, sites with abusive experiences will be prevented from opening new windows or tabs.
However this behavior will not trigger if SafeBrowsingEnabled policy is set to False.
If this policy is set to False, sites with abusive experiences will be allowed to open new windows or tabs.
If this policy is left not set, True will be used.</string><string id="AdsSettingForIntrusiveAdsSites">Ads setting for sites with intrusive ads</string><string id="AdsSettingForIntrusiveAdsSites_Explain">Allows you to set whether ads should be blocked on sites with intrusive ads.

If this policy is set to 2, ads will be blocked on sites with intrusive ads.
However this behavior will not trigger if SafeBrowsingEnabled policy is set to False.
If this policy is set to 1, ads will not be blocked on sites with intrusive ads.
If this policy is left not set, 2 will be used.</string><string id="AdsSettingForIntrusiveAdsSites_AllowAds">Allow ads on all sites</string><string id="AdsSettingForIntrusiveAdsSites_BlockAds">Do not allow ads on sites with intrusive ads</string><string id="AllowDeletingBrowserHistory">Enable deleting browser and download history</string><string id="AllowDeletingBrowserHistory_Explain">Enables deleting browser history and download history in Google Chrome and prevents users from changing this setting.

Note that even with this policy disabled, the browsing and download history are not guaranteed to be retained: users may be able to edit or delete the history database files directly, and the browser itself may expire or archive any or all history items at any time.

If this setting is enabled or not set, browsing and download history can be deleted.

If this setting is disabled, browsing and download history cannot be deleted.</string><string id="AllowDinosaurEasterEgg">Allow Dinosaur Easter Egg Game</string><string id="AllowDinosaurEasterEgg_Explain">Allow users to play dinosaur easter egg game when device is offline.

If this policy is set to False, users will not be able to play the dinosaur easter egg game when device is offline. If this setting is set to True, users are allowed to play the dinosaur game. If this policy is not set, users are not allowed to play the dinosaur easter egg game on enrolled Chrome OS, but are allowed to play it under other circumstances.</string><string id="AllowFileSelectionDialogs">Allow invocation of file selection dialogs</string><string id="AllowFileSelectionDialogs_Explain">Allows access to local files on the machine by allowing Google Chrome to display file selection dialogs.

If you enable this setting, users can open file selection dialogs as normal.

If you disable this setting, whenever the user performs an action which would provoke a file selection dialog (like importing bookmarks, uploading files, saving links, etc.) a message is displayed instead and the user is assumed to have clicked Cancel on the file selection dialog.

If this setting is not set, users can open file selection dialogs as normal.</string><string id="AllowOutdatedPlugins">Allow running plugins that are outdated</string><string id="AllowOutdatedPlugins_Explain">If you enable this setting, outdated plugins are used as normal plugins.

If you disable this setting, outdated plugins will not be used and users will not be asked for permission to run them.

If this setting is not set, users will be asked for permission to run outdated plugins.</string><string id="AllowPopupsDuringPageUnload">Allows a page to show popups during its unloading</string><string id="AllowPopupsDuringPageUnload_Explain">This policy allows an admin to specify that a page may show popups during its unloading.

When the policy is set to enabled, pages are allowed to show popups while they are being unloaded.

When the policy is set to disabled or not set, pages are not allowed to show popups while they are being unloaded, as per the spec (https://html.spec.whatwg.org/#apis-for-creating-and-navigating-browsing-contexts-by-name).

This policy will be removed in Chrome 82.

See https://www.chromestatus.com/feature/5989473649164288 .</string><string id="AllowedDomainsForApps">Define domains allowed to access G Suite</string><string id="AllowedDomainsForApps_Explain">Enables Google Chrome's restricted log in feature in G Suite and prevents users from changing this setting.

If you define this setting, the user will only be able to access Google
Apps using accounts from the specified domains (note that to allow
gmail.com/googlemail.com accounts, you should add &quot;consumer_accounts&quot;
(without quotes) to the list of domains).

This setting will prevent the user from logging in, and adding a Secondary
Account, on a managed device that requires Google authentication, if that
account does not belong to the aforementioned list of allowed domains.

If you leave this setting empty/not-configured, the user will be able to
access G Suite with any account.

This policy causes the X-GoogApps-Allowed-Domains header to be appended to
all HTTP and HTTPS requests to all google.com domains, as described in
https://support.google.com/a/answer/1668854.

Users cannot change or override this setting.

Example value: managedchrome.com,example.com</string><string id="AlternateErrorPagesEnabled">Enable alternate error pages</string><string id="AlternateErrorPagesEnabled_Explain">Enables the use of alternate error pages that are built into Google Chrome (such as 'page not found') and prevents users from changing this setting.

If you enable this setting, alternate error pages are used.

If you disable this setting, alternate error pages are never used.

If you enable or disable this setting, users cannot change or override this setting in Google Chrome.

If this policy is left not set, this will be enabled but the user will be able to change it.</string><string id="AlwaysOpenPdfExternally">Always Open PDF files externally</string><string id="AlwaysOpenPdfExternally_Explain">Disables the internal PDF viewer in Google Chrome. Instead it treats it as download and allows the user to open PDF files with the default application.

If this policy is left not set or disabled the PDF plugin will be used to open PDF files unless the user disables it.</string><string id="ApplicationLocaleValue">Application locale</string><string id="ApplicationLocaleValue_Explain">Configures the application locale in Google Chrome and prevents users from changing the locale.

If you enable this setting, Google Chrome uses the specified locale. If the configured locale is not supported, 'en-US' is used instead.

If this setting is disabled or not set, Google Chrome uses either the user-specified preferred locale (if configured), the system locale or the fallback locale 'en-US'.

Example value: en</string><string id="AudioCaptureAllowed">Allow or deny audio capture</string><string id="AudioCaptureAllowed_Explain">If enabled or not configured (default), the user will be prompted for
audio capture access except for URLs configured in the
AudioCaptureAllowedUrls list which will be granted access without prompting.

When this policy is disabled, the user will never be prompted and audio
capture only be available to URLs configured in AudioCaptureAllowedUrls.

This policy affects all types of audio inputs and not only the built-in microphone.</string><string id="AudioCaptureAllowedUrls">URLs that will be granted access to audio capture devices without prompt</string><string id="AudioCaptureAllowedUrls_Explain">Patterns in this list will be matched against the security
origin of the requesting URL.  If a match is found, access to audio
capture devices will be granted without prompt.

NOTE: Until version 45, this policy was only supported in Kiosk mode.

Example value:

https://www.example.com/
https://[*.]example.edu/</string><string id="AudioCaptureAllowedUrlsDesc">URLs that will be granted access to audio capture devices without prompt</string><string id="AutofillAddressEnabled">Enable AutoFill for addresses</string><string id="AutofillAddressEnabled_Explain">Enables Google Chrome's AutoFill feature and allows users to auto complete address information in web forms using previously stored information.

If this setting is disabled, Autofill will never suggest, or fill address information, nor will it save additional address information that the user might submit while browsing the web.

If this setting is enabled or has no value, the user will be able to control Autofill for addresses in the UI.</string><string id="AutofillCreditCardEnabled">Enable AutoFill for credit cards</string><string id="AutofillCreditCardEnabled_Explain">Enables Google Chrome's AutoFill feature and allows users to auto complete credit card information in web forms using previously stored information.

If this setting is disabled, Autofill will never suggest, or fill credit card information, nor will it save additional credit card information that the user might submit while browsing the web.

If this setting is enabled or has no value, the user will be able to control Autofill for credit cards in the UI.</string><string id="AutoplayAllowed">Allow media autoplay</string><string id="AutoplayAllowed_Explain">Allows you to control if videos can play automatically (without user consent) with audio content in Google Chrome.

If the policy is set to True, Google Chrome is allowed to autoplay media.
If the policy is set to False, Google Chrome is not allowed to autoplay media. The AutoplayWhitelist policy can be used to override this for certain URL patterns.
By default, Google Chrome is not allowed to autoplay media. The AutoplayWhitelist policy can be used to override this for certain URL patterns.

Note that if Google Chrome is running and this policy changes, it will be applied only to new opened tabs. Therefore some tabs might still observe the previous behavior.
</string><string id="AutoplayWhitelist">Allow media autoplay on a whitelist of URL patterns</string><string id="AutoplayWhitelist_Explain">Controls the whitelist of URL patterns that autoplay will always be enabled on.

If autoplay is enabled then videos can play automatically (without user consent) with audio content in Google Chrome.

A valid URL patterns specifications are:

- [*.]domain.tld (matches domain.tld and all sub-domains)

- host (matches an exact hostname)

- scheme://host:port (supported schemes: http,https)

- scheme://[*.]domain.tld:port (supported schemes: http,https)

- file://path (The path has to be an absolute path and start with a '/')

- a.b.c.d (matches an exact IPv4 ip)

- [a:b:c:d:e:f:g:h] (matches an exact IPv6 ip)

If the AutoplayAllowed policy is set to True then this policy will have no effect.

If the AutoplayAllowed policy is set to False then any URL patterns set in this policy will still be allowed to play.

Note that if Google Chrome is running and this policy changes, it will be applied only to new opened tabs. Therefore some tabs might still observe the previous behavior.

Example value:

https://www.example.com
[*.]example.edu</string><string id="AutoplayWhitelistDesc">Allow media autoplay on a whitelist of URL patterns</string><string id="BackgroundModeEnabled">Continue running background apps when Google Chrome is closed</string><string id="BackgroundModeEnabled_Explain">Determines whether a Google Chrome process is started on OS login and keeps running when the last browser window is closed, allowing background apps and the current browsing session to remain active, including any session cookies. The background process displays an icon in the system tray and can always be closed from there.

If this policy is set to True, background mode is enabled and cannot be controlled by the user in the browser settings.

If this policy is set to False, background mode is disabled and cannot be controlled by the user in the browser settings.

If this policy is left unset, background mode is initially disabled and can be controlled by the user in the browser settings.</string><string id="BlockThirdPartyCookies">Block third party cookies</string><string id="BlockThirdPartyCookies_Explain">Enabling this setting prevents cookies from being set by web page elements that are not from the domain that is in the browser's address bar.

Disabling this setting allows cookies to be set by web page elements that are not from the domain that is in the browser's address bar and prevents users from changing this setting.

If this policy is left not set, third party cookies will be enabled but the user will be able to change that.</string><string id="BookmarkBarEnabled">Enable Bookmark Bar</string><string id="BookmarkBarEnabled_Explain">If you enable this setting, Google Chrome will show a bookmark bar.

If you disable this setting, users will never see the bookmark bar.

If you enable or disable this setting, users cannot change or override it in Google Chrome.

If this setting is left not set the user can decide to use this function or not.</string><string id="BrowserAddPersonEnabled">Enable add person in user manager</string><string id="BrowserAddPersonEnabled_Explain">If this policy is set to true or not configured, Google Chrome will allow Add Person from the user manager.

If this policy is set to false, Google Chrome will not allow creation of new profiles from the user manager.</string><string id="BrowserGuestModeEnabled">Enable guest mode in browser</string><string id="BrowserGuestModeEnabled_Explain">If this policy is set to true or not configured, Google Chrome will enable guest logins. Guest logins are Google Chrome profiles where all windows are in incognito mode.

If this policy is set to false, Google Chrome will not allow guest profiles to be started.</string><string id="BrowserNetworkTimeQueriesEnabled">Allow queries to a Google time service</string><string id="BrowserNetworkTimeQueriesEnabled_Explain">Setting this policy to false stops Google Chrome from occasionally sending queries to a Google server to retrieve an accurate timestamp. These queries will be enabled if this policy is set to True or is not set.</string><string id="BrowserSignin">Browser sign in settings</string><string id="BrowserSignin_Explain">This policy controls the sign-in behavior of the browser. It allows you to specify if the user can sign in to Google Chrome with their account and use account related services like Chrome sync.

If the policy is set to &quot;Disable browser sign-in&quot; then the user can not sign in to the browser and use account based services. In this case browser level features like Chrome sync can not be used and will be unavailable. If the user was signed in and the policy is set &quot;Disabled&quot; they will be signed out the next time they run Chrome but their local profile data like bookmarks, passwords etc. will stay preserved. The user will still be able to sign into and use Google web services like Gmail.

If the policy is set to &quot;Enable browser sign-in,&quot; then the user is allowed to sign in to the browser and is automatically signed in to the browser when signed in to Google web services like Gmail. Being signed in to the browser means the user's account information will be kept by the browser. However, it does not mean that Chrome sync will be turned on per default; the user must separately opt-in to use this feature. Enabling this policy will prevent the user from turning off the setting that allows browser sign-in. To control the availability of Chrome sync, use the &quot;SyncDisabled&quot; policy.

If the policy is set to &quot;Force browser sign-in&quot; the user is presented with an account selection dialog and has to choose and sign in to an account to use the browser. This ensures that for managed accounts the policies associated with the account are applied and enforced. By default this turns on Chrome sync for the account, except for the case when sync was disabled by the domain admin or via the &quot;SyncDisabled&quot; policy. The default value of BrowserGuestModeEnabled will be set to false. Note that existing unsigned profiles will be locked and inaccessible after enabling this policy. For more information, see help center article: https://support.google.com/chrome/a/answer/7572556.

If this policy is not set then the user can decide if they want to enable the browser sign in option and use it as they see fit.</string><string id="BrowserSignin_Disable">Disable browser sign-in</string><string id="BrowserSignin_Enable">Enable browser sign-in</string><string id="BrowserSignin_Force">Force users to sign-in to use the browser</string><string id="BuiltInDnsClientEnabled">Use built-in DNS client</string><string id="BuiltInDnsClientEnabled_Explain">Controls whether the built-in DNS client is used in Google Chrome.

If this policy is set to true, the built-in DNS client will be used, if available.

If this policy is set to false, the built-in DNS client will never be used.

If this policy is left not set, the built-in DNS client will be enabled by default on MacOS, Android (when neither Private DNS nor VPN are enabled) and ChromeOS, and the users will be able to change whether the built-in DNS client is used by editing chrome://flags or specifying a command-line flag.</string><string id="CertificateTransparencyEnforcementDisabledForCas">Disable Certificate Transparency enforcement for a list of subjectPublicKeyInfo hashes</string><string id="CertificateTransparencyEnforcementDisabledForCas_Explain">Disables enforcing Certificate Transparency requirements for a list of subjectPublicKeyInfo hashes.

This policy allows disabling Certificate Transparency disclosure requirements for certificate chains that contain certificates with one of the specified subjectPublicKeyInfo hashes. This allows certificates that would otherwise be untrusted, because they were not properly publicly disclosed, to continue to be used for Enterprise hosts.

In order for Certificate Transparency enforcement to be disabled when this policy is set, one of the following conditions must be met:
1. The hash is of the server certificate's subjectPublicKeyInfo.
2. The hash is of a subjectPublicKeyInfo that appears in a CA certificate in the certificate chain, that CA certificate is constrained via the X.509v3 nameConstraints extension, one or more directoryName nameConstraints are present in the permittedSubtrees, and the directoryName contains an organizationName attribute.
3. The hash is of a subjectPublicKeyInfo that appears in a CA certificate in the certificate chain, the CA certificate has one or more organizationName attributes in the certificate Subject, and the server's certificate contains the same number of organizationName attributes, in the same order, and with byte-for-byte identical values.

A subjectPublicKeyInfo hash is specified by concatenating the hash algorithm name, the &quot;/&quot; character, and the Base64 encoding of that hash algorithm applied to the DER-encoded subjectPublicKeyInfo of the specified certificate. This Base64 encoding is the same format as an SPKI Fingerprint, as defined in RFC 7469, Section 2.4. Unrecognized hash algorithms are ignored. The only supported hash algorithm at this time is &quot;sha256&quot;.

If this policy is not set, any certificate that is required to be disclosed via Certificate Transparency will be treated as untrusted if it is not disclosed according to the Certificate Transparency policy.

Example value:

sha256/AAAAAAAAAAAAAAAAAAAAAA==
sha256//////////////////////w==</string><string id="CertificateTransparencyEnforcementDisabledForCasDesc">Disable Certificate Transparency enforcement for a list of subjectPublicKeyInfo hashes</string><string id="CertificateTransparencyEnforcementDisabledForLegacyCas">Disable Certificate Transparency enforcement for a list of Legacy Certificate Authorities</string><string id="CertificateTransparencyEnforcementDisabledForLegacyCas_Explain">Disables enforcing Certificate Transparency requirements for a list of Legacy Certificate Authorities.

This policy allows disabling Certificate Transparency disclosure requirements for certificate chains that contain certificates with one of the specified subjectPublicKeyInfo hashes. This allows certificates that would otherwise be untrusted, because they were not properly publicly disclosed, to continue to be used for Enterprise hosts.

In order for Certificate Transparency enforcement to be disabled when this policy is set, the hash must be of a subjectPublicKeyInfo appearing in a CA certificate that is recognized as a Legacy Certificate Authority (CA). A Legacy CA is a CA that has been publicly trusted by default one or more operating systems supported by Google Chrome, but is not trusted by the Android Open Source Project or Google Chrome OS.

A subjectPublicKeyInfo hash is specified by concatenating the hash algorithm name, the &quot;/&quot; character, and the Base64 encoding of that hash algorithm applied to the DER-encoded subjectPublicKeyInfo of the specified certificate. This Base64 encoding is the same format as an SPKI Fingerprint, as defined in RFC 7469, Section 2.4. Unrecognized hash algorithms are ignored. The only supported hash algorithm at this time is &quot;sha256&quot;.

If this policy is not set, any certificate that is required to be disclosed via Certificate Transparency will be treated as untrusted if it is not disclosed according to the Certificate Transparency policy.

Example value:

sha256/AAAAAAAAAAAAAAAAAAAAAA==
sha256//////////////////////w==</string><string id="CertificateTransparencyEnforcementDisabledForLegacyCasDesc">Disable Certificate Transparency enforcement for a list of Legacy Certificate Authorities</string><string id="CertificateTransparencyEnforcementDisabledForUrls">Disable Certificate Transparency enforcement for a list of URLs</string><string id="CertificateTransparencyEnforcementDisabledForUrls_Explain">Disables enforcing Certificate Transparency requirements to the listed URLs.

This policy allows certificates for the hostnames in the specified URLs to not be disclosed via Certificate Transparency. This allows certificates that would otherwise be untrusted, because they were not properly publicly disclosed, to continue to be used, but makes it harder to detect misissued certificates for those hosts.

A URL pattern is formatted according to https://www.chromium.org/administrators/url-blacklist-filter-format. However, because certificates are valid for a given hostname independent of the scheme, port, or path, only the hostname portion of the URL is considered. Wildcard hosts are not supported.

If this policy is not set, any certificate that is required to be disclosed via Certificate Transparency will be treated as untrusted if it is not disclosed according to the Certificate Transparency policy.

Example value:

example.com
.example.com</string><string id="CertificateTransparencyEnforcementDisabledForUrlsDesc">Disable Certificate Transparency enforcement for a list of URLs</string><string id="ChromeCleanupEnabled">Enable Chrome Cleanup on Windows</string><string id="ChromeCleanupEnabled_Explain">If disabled, prevents Chrome Cleanup from scanning the system for unwanted software and performing cleanups. Manually triggering Chrome Cleanup from chrome://settings/cleanup is disabled.

If enabled or unset, Chrome Cleanup periodically scans the system for unwanted software and should any be found, will ask the user if they wish to remove it. Manually triggering Chrome Cleanup from chrome://settings is enabled.

This policy is available only on Windows instances that are joined to a Microsoft® Active Directory® domain. or Windows 10 Pro or Enterprise instances that enrolled for device management.</string><string id="ChromeCleanupReportingEnabled">Control how Chrome Cleanup reports data to Google</string><string id="ChromeCleanupReportingEnabled_Explain">If unset, should Chrome Cleanup detect unwanted software, it may report metadata about the scan to Google in accordance with policy set by SafeBrowsingExtendedReportingEnabled. Chrome Cleanup will then ask the user if they wish to clean up the unwanted software. The user can choose to share results of the cleanup with Google to assist with future unwanted software detection. These results contain file metadata, automatically installed extensions and registry keys as described by the Chrome Privacy Whitepaper.

If disabled, should Chrome Cleanup detect unwanted software, it will not report metadata about the scan to Google, overriding any policy set by SafeBrowsingExtendedReportingEnabled. Chrome Cleanup will ask the user if they wish to clean up the unwanted software.  Results of the cleanup will not be reported to Google and the user will not have the option to do so.

If enabled, should Chrome Cleanup detect unwanted software, it may report metadata about the scan to Google in accordance with policy set by SafeBrowsingExtendedReportingEnabled. Chrome Cleanup will ask the user if they wish to clean up the unwanted software.  Results of the cleanup will be reported to Google and the user will not have the option to prevent it.

This policy is available only on Windows instances that are joined to a Microsoft® Active Directory® domain. or Windows 10 Pro or Enterprise instances that enrolled for device management.</string><string id="CloudManagementEnrollmentMandatory">Enable mandatory cloud management enrollment</string><string id="CloudManagementEnrollmentMandatory_Explain">
If this policy is set to True, cloud management enrollment is mandatory and blocks Chrome launch process if failed.

If this policy is left unset or set to False, cloud management enrollment is optional and does not blocks Chrome launch process if failed.

This policy is used by machine scope cloud policy enrollment on desktop and can be set by Registry or GPO on Windows, plist on Mac and JSON policy file on Linux.</string><string id="CloudManagementEnrollmentToken">The enrollment token of cloud policy on desktop</string><string id="CloudManagementEnrollmentToken_Explain">
If this policy is set, Google Chrome will try to register itself and apply associated cloud policy for all profiles.

The value of this policy is an Enrollment token that can be retrieved from the Google Admin console.

Example value: 37185d02-e055-11e7-80c1-9a214cf093ae</string><string id="CloudPolicyOverridesPlatformPolicy">Google Chrome cloud policy overrides Platform policy.</string><string id="CloudPolicyOverridesPlatformPolicy_Explain">
If the policy is set to true, cloud policy takes precedence if it conflicts with platform policy.
If the policy is set to false or not configured, platform policy takes precedence if it conflicts with cloud policy.

This policy is only available as a mandatory machine platform policy and it only affects machine scope cloud policies.
</string><string id="ComponentUpdatesEnabled">Enable component updates in Google Chrome</string><string id="ComponentUpdatesEnabled_Explain">Enables component updates for all components in Google Chrome when not set or set to True.

If set to False, updates to components are disabled. However, some components are exempt from this policy: updates to any component that does not contain executable code, or does not significantly alter the behavior of the browser, or is critical for its security will not be disabled.
Examples of such components include the certificate revocation lists and Safe Browsing data.
See https://developers.google.com/safe-browsing for more info on Safe Browsing.</string><string id="DefaultBrowserSettingEnabled">Set Google Chrome as Default Browser</string><string id="DefaultBrowserSettingEnabled_Explain">Configures the default browser checks in Google Chrome and prevents users from changing them.

If you enable this setting, Google Chrome will always check on startup whether it is the default browser and automatically register itself if possible.

If this setting is disabled, Google Chrome will never check if it is the default browser and will disable user controls for setting this option.

If this setting is not set, Google Chrome will allow the user to control whether it is the default browser and whether user notifications should be shown when it isn't.

Note for administrators of Microsoft® Windows: Enabling this setting will only work for machines running Windows 7. For versions of Windows starting with Windows 8, you must deploy a &quot;default application associations&quot; file that makes Google Chrome the handler for the https and http protocols (and, optionally, the ftp protocol and file formats such as .html, .htm, .pdf, .svg, .webp, etc...). See https://support.google.com/chrome?p=make_chrome_default_win for more information.</string><string id="DefaultDownloadDirectory">Set default download directory</string><string id="DefaultDownloadDirectory_Explain">Configures the default directory that Google Chrome will use for downloading files.

If you set this policy, it will change the default directory that Google Chrome downloads files to. This policy is not mandatory, so the user will be able to change the directory.

If you do not set this policy, Google Chrome will use its usual default directory (platform-specific).

See https://www.chromium.org/administrators/policy-list-3/user-data-directory-variables for a list of variables that can be used.

Example value: /home/${user_name}/Downloads</string><string id="DeveloperToolsAvailability">Control where Developer Tools can be used</string><string id="DeveloperToolsAvailability_Explain">Allows you to control where Developer Tools can be used.

If this policy is set to 'DeveloperToolsDisallowedForForceInstalledExtensions' (value 0, which is the default value), the Developer Tools and the JavaScript console can be accessed in general, but they can not be accessed in the context of extensions installed by enterprise policy.
If this policy is set to 'DeveloperToolsAllowed' (value 1), the Developer Tools and the JavaScript console can be accessed and used in all contexts, including the context of extensions installed by enterprise policy.
If this policy is set to 'DeveloperToolsDisallowed' (value 2), the Developer Tools can not be accessed and web-site elements can not be inspected anymore. Any keyboard shortcuts and any menu or context menu entries to open the Developer Tools or the JavaScript Console will be disabled.</string><string id="DeveloperToolsAvailability_DeveloperToolsDisallowedForForceInstalledExtensions">Disallow usage of the Developer Tools on extensions installed by enterprise policy, allow usage of the Developer Tools in other contexts</string><string id="DeveloperToolsAvailability_DeveloperToolsAllowed">Allow usage of the Developer Tools</string><string id="DeveloperToolsAvailability_DeveloperToolsDisallowed">Disallow usage of the Developer Tools</string><string id="Disable3DAPIs">Disable support for 3D graphics APIs</string><string id="Disable3DAPIs_Explain">Enabling this setting prevents web pages from accessing the graphics processing unit (GPU). Specifically, web pages can not access the WebGL API and plugins can not use the Pepper 3D API.

Disabling this setting or leaving it not set potentially allows web pages to use the WebGL API and plugins to use the Pepper 3D API. The default settings of the browser may still require command line arguments to be passed in order to use these APIs.

If HardwareAccelerationModeEnabled is set to false, Disable3DAPIs is ignored and it is equivalent to Disable3DAPIs being set to true.</string><string id="DisableSafeBrowsingProceedAnyway">Disable proceeding from the Safe Browsing warning page</string><string id="DisableSafeBrowsingProceedAnyway_Explain">The Safe Browsing service shows a warning page when users navigate to sites that are flagged as potentially malicious. Enabling this setting prevents users from proceeding anyway from the warning page to the malicious site.

This policy only prevents users from proceeding on Safe Browsing warnings (e.g. malware and phishing) not for SSL certificate related issues like invalid or expired certificates.

If this setting is disabled or not configured then users can choose to proceed to the flagged site after being shown the warning.

See https://developers.google.com/safe-browsing for more info on Safe Browsing.</string><string id="DisableScreenshots">Disable taking screenshots</string><string id="DisableScreenshots_Explain">If enabled, screenshots cannot be taken using keyboard shortcuts or extension APIs.

If disabled or not specified, taking screenshots is allowed.</string><string id="DiskCacheDir">Set disk cache directory</string><string id="DiskCacheDir_Explain">Configures the directory that Google Chrome will use for storing cached files on the disk.

If you set this policy, Google Chrome will use the provided directory regardless whether the user has specified the '--disk-cache-dir' flag or not. To avoid data loss or other unexpected errors this policy should not be set to a volume's root directory or to a directory used for other purposes, because Google Chrome manages its contents.

See https://www.chromium.org/administrators/policy-list-3/user-data-directory-variables for a list of variables that can be used.

If this policy is left not set the default cache directory will be used and the user will be able to override it with the '--disk-cache-dir' command line flag.

Example value: ${user_home}/Chrome_cache</string><string id="DiskCacheSize">Set disk cache size in bytes</string><string id="DiskCacheSize_Explain">Configures the cache size that Google Chrome will use for storing cached files on the disk.

If you set this policy, Google Chrome will use the provided cache size regardless whether the user has specified the '--disk-cache-size' flag or not. The value specified in this policy is not a hard boundary but rather a suggestion to the caching system, any value below a few megabytes is too small and will be rounded up to a sane minimum.

If the value of this policy is 0, the default cache size will be used but the user will not be able to change it.

If this policy is not set the default size will be used and the user will be able to override it with the --disk-cache-size flag.</string><string id="DownloadDirectory">Set download directory</string><string id="DownloadDirectory_Explain">Configures the directory that Google Chrome will use for downloading files.

If you set this policy, Google Chrome will use the provided directory regardless whether the user has specified one or enabled the flag to be prompted for download location every time.

See https://www.chromium.org/administrators/policy-list-3/user-data-directory-variables for a list of variables that can be used.

If this policy is left not set the default download directory will be used and the user will be able to change it.

Example value: /home/${user_name}/Downloads</string><string id="DownloadRestrictions">Allow download restrictions</string><string id="DownloadRestrictions_Explain">Configures the type of downloads that Google Chrome will completely block, without letting users override the security decision.

If you set this policy, Google Chrome will prevent certain types of downloads, and won't let user bypass the security warnings.

When the 'Block dangerous downloads' option is chosen, all downloads are allowed, except for those that carry Safe Browsing warnings.

When the 'Block potentially dangerous downloads' option is chosen, all downloads allowed, except for those that carry Safe Browsing warnings of potentially dangerous downloads.

When the 'Block all downloads' option is chosen, all downloads are blocked.

When this policy is not set, (or the 'No special restrictions' option is chosen), the downloads will go through the usual security restrictions based on Safe Browsing analysis results.

Note that these restrictions apply to downloads triggered from web page content, as well as the 'download link...' context menu option. These restrictions do not apply to the save / download of the currently displayed page, nor does it apply to saving as PDF from the printing options.

See https://developers.google.com/safe-browsing for more info on Safe Browsing.</string><string id="DownloadRestrictions_DefaultDownloadSecurity">No special restrictions</string><string id="DownloadRestrictions_BlockDangerousDownloads">Block dangerous downloads</string><string id="DownloadRestrictions_BlockPotentiallyDangerousDownloads">Block potentially dangerous downloads</string><string id="DownloadRestrictions_BlockAllDownloads">Block all downloads</string><string id="EditBookmarksEnabled">Enable or disable bookmark editing</string><string id="EditBookmarksEnabled_Explain">If you enable this setting, bookmarks can be added, removed or modified. This is the default also when this policy is not set.

If you disable this setting, bookmarks can not be added, removed or modified. Existing bookmarks are still available.</string><string id="EnableDeprecatedWebPlatformFeatures">Enable deprecated web platform features for a limited time</string><string id="EnableDeprecatedWebPlatformFeatures_Explain">Specify a list of deprecated web platform features to re-enable temporarily.

This policy gives administrators the ability to re-enable deprecated web platform features for a limited time. Features are identified by a string tag and the features corresponding to the tags included in the list specified by this policy will get re-enabled.

If this policy is left not set, or the list is empty or does not match one of the supported string tags, all deprecated web platform features will remain disabled.

While the policy itself is supported on the above platforms, the feature it is enabling may be available on fewer platforms. Not all deprecated Web Platform features can be re-enabled. Only the ones explicitly listed below can be for a limited period of time, which is different per feature. The general format of the string tag will be [DeprecatedFeatureName]_EffectiveUntil[yyyymmdd]. As reference, you can find the intent behind the Web Platform feature changes at https://bit.ly/blinkintents.


Example value:

ExampleDeprecatedFeature_EffectiveUntil20080902</string><string id="EnableDeprecatedWebPlatformFeaturesDesc">Enable deprecated web platform features for a limited time</string><string id="EnableOnlineRevocationChecks">Enable online OCSP/CRL checks</string><string id="EnableOnlineRevocationChecks_Explain">In light of the fact that soft-fail, online revocation checks provide no effective security benefit, they are disabled by default in Google Chrome version 19 and later. By setting this policy to true, the previous behavior is restored and online OCSP/CRL checks will be performed.

If the policy is not set, or is set to false, then Google Chrome will not perform online revocation checks in Google Chrome 19 and later.</string><string id="EnterpriseHardwarePlatformAPIEnabled">Enables managed extensions to use the Enterprise Hardware Platform API</string><string id="EnterpriseHardwarePlatformAPIEnabled_Explain">When this policy is set to enabled, extensions installed by enterprise policy are allowed to use the Enterprise Hardware Platform API.
When this policy is set to disabled or not set, no extensions are allowed to use the Enterprise Hardware Platform API.
This policy also applies to component extensions such as the Hangout Services extension.</string><string id="ForceEphemeralProfiles">Ephemeral profile</string><string id="ForceEphemeralProfiles_Explain">If set to enabled this policy forces the profile to be switched to ephemeral mode. If this policy is specified as an OS policy (e.g. GPO on Windows) it will apply to every profile on the system; if the policy is set as a Cloud policy it will apply only to a profile signed in with a managed account.

In this mode the profile data is persisted on disk only for the length of the user session. Features like browser history, extensions and their data, web data like cookies and web databases are not preserved after the browser is closed. However this does not prevent the user from downloading any data to disk manually, save pages or print them.

If the user has enabled sync all this data is preserved in their sync profile just like with regular profiles. Incognito mode is also available if not explicitly disabled by policy.

If the policy is set to disabled or left not set signing in leads to regular profiles.</string><string id="ForceGoogleSafeSearch">Force Google SafeSearch</string><string id="ForceGoogleSafeSearch_Explain">Forces queries in Google Web Search to be done with SafeSearch set to active and prevents users from changing this setting.

If you enable this setting, SafeSearch in Google Search is always active.

If you disable this setting or do not set a value, SafeSearch in Google Search is not enforced.</string><string id="ForceNetworkInProcess">Force networking code to run in the browser process</string><string id="ForceNetworkInProcess_Explain">This policy forces networking code to run in the browser process.

This policy is disabled by default, and if enabled, leaves users open to the security issues once the networking process is sandboxed.

This policy is intended to give enterprises a chance to migrate to 3rd party software that does not depend on hooking the networking APIs. Proxy servers are recommended over LSPs and Win32 API patching.

If this policy is not set, networking code may run out of the browser process depending on field trials of the NetworkService experiment.</string><string id="ForceYouTubeRestrict">Force minimum YouTube Restricted Mode</string><string id="ForceYouTubeRestrict_Explain">Enforces a minimum Restricted Mode on YouTube and prevents users from
picking a less restricted mode.

If this setting is set to Strict, Strict Restricted Mode on YouTube is always active.

If this setting is set to Moderate, the user may only pick Moderate Restricted Mode
and Strict Restricted Mode on YouTube, but cannot disable Restricted Mode.

If this setting is set to Off or no value is set, Restricted Mode on YouTube is not enforced by Google Chrome. External policies such as YouTube policies might still enforce Restricted Mode, though.</string><string id="ForceYouTubeRestrict_Off">Do not enforce Restricted Mode on YouTube</string><string id="ForceYouTubeRestrict_Moderate">Enforce at least Moderate Restricted Mode on YouTube</string><string id="ForceYouTubeRestrict_Strict">Enforce Strict Restricted Mode for YouTube</string><string id="FullscreenAllowed">Allow fullscreen mode</string><string id="FullscreenAllowed_Explain">This policy controls the availability of fullscreen mode in which all Google Chrome UI is hidden and only web content is visible.

If this policy is set to true or not not configured, the user, apps and extensions with appropriate permissions can enter fullscreen mode.

If this policy is set to false, neither the user nor any apps or extensions can enter fullscreen mode.

On all platforms except Google Chrome OS, kiosk mode is unavailable when fullscreen mode is disabled.</string><string id="HardwareAccelerationModeEnabled">Use hardware acceleration when available</string><string id="HardwareAccelerationModeEnabled_Explain">If this policy is set to true or left unset, hardware acceleration will be enabled unless a certain GPU feature is blacklisted.

If this policy is set to false, hardware acceleration will be disabled.</string><string id="HideWebStoreIcon">Hide the web store from the New Tab Page and app launcher</string><string id="HideWebStoreIcon_Explain">Hide the Chrome Web Store app and footer link from the New Tab Page and Google Chrome OS app launcher.

When this policy is set to true, the icons are hidden.

When this policy is set to false or is not configured, the icons are visible.</string><string id="Http09OnNonDefaultPortsEnabled">Enable HTTP/0.9 support on non-default ports</string><string id="Http09OnNonDefaultPortsEnabled_Explain">This policy enables HTTP/0.9 on ports other than 80 for HTTP and 443 for HTTPS.

This policy is disabled by default, and if enabled, leaves users open to the security issue https://crbug.com/600352.

This policy is intended to give enterprises a chance to migrate exising servers off of HTTP/0.9, and will be removed in the future.

If this policy is not set, HTTP/0.9 will be disabled on non-default ports.</string><string id="ImportAutofillFormData">Import autofill form data from default browser on first run</string><string id="ImportAutofillFormData_Explain">This policy forces the autofill form data to be imported from the previous default browser if enabled. If enabled, this policy also affects the import dialog.

If disabled, the autofill form data is not imported.

If it is not set, the user may be asked whether to import, or importing may happen automatically.</string><string id="ImportBookmarks">Import bookmarks from default browser on first run</string><string id="ImportBookmarks_Explain">This policy forces bookmarks to be imported from the current default browser if enabled. If enabled, this policy also affects the import dialog.

If disabled, no bookmarks are imported.

If it is not set, the user may be asked whether to import, or importing may happen automatically.</string><string id="ImportHistory">Import browsing history from default browser on first run</string><string id="ImportHistory_Explain">This policy forces the browsing history to be imported from the current default browser if enabled. If enabled, this policy also affects the import dialog.

If disabled, no browsing history is imported.

If it is not set, the user may be asked whether to import, or importing may happen automatically.</string><string id="ImportHomepage">Import of homepage from default browser on first run</string><string id="ImportHomepage_Explain">This policy forces the home page to be imported from the current default browser if enabled.

If disabled, the home page is not imported.

If it is not set, the user may be asked whether to import, or importing may happen automatically.</string><string id="ImportSavedPasswords">Import saved passwords from default browser on first run</string><string id="ImportSavedPasswords_Explain">This policy forces the saved passwords to be imported from the previous default browser if enabled. If enabled, this policy also affects the import dialog.

If disabled, the saved passwords are not imported.

If it is not set, the user may be asked whether to import, or importing may happen automatically.</string><string id="ImportSearchEngine">Import search engines from default browser on first run</string><string id="ImportSearchEngine_Explain">This policy forces search engines to be imported from the current default browser if enabled. If enabled, this policy also affects the import dialog.

If disabled, the default search engine is not imported.

If it is not set, the user may be asked whether to import, or importing may happen automatically.</string><string id="IncognitoModeAvailability">Incognito mode availability</string><string id="IncognitoModeAvailability_Explain">Specifies whether the user may open pages in Incognito mode in Google Chrome.

If 'Enabled' is selected or the policy is left unset, pages may be opened in Incognito mode.

If 'Disabled' is selected, pages may not be opened in Incognito mode.

If 'Forced' is selected, pages may be opened ONLY in Incognito mode.</string><string id="IncognitoModeAvailability_Enabled">Incognito mode available</string><string id="IncognitoModeAvailability_Disabled">Incognito mode disabled</string><string id="IncognitoModeAvailability_Forced">Incognito mode forced</string><string id="IsolateOrigins">Enable Site Isolation for specified origins</string><string id="IsolateOrigins_Explain">
If the policy is enabled, each of the named origins in a
comma-separated list will run in its own process. This will also isolate
origins named by subdomains; e.g. specifying https://example.com/ will
also cause https://foo.example.com/ to be isolated as part of the
https://example.com/ site.
If the policy is disabled, then both IsolateOrigins and SitePerProcess features will be disabled. Users will still be able to enable IsolateOrigins manually, via command line flags.
If the policy is not configured, the user will be able to change this setting.
On Google Chrome OS, it is recommended to also set the DeviceLoginScreenIsolateOrigins device policy to the same value. If the values specified by the two policies don't match, a delay may be incurred when entering a user session while the value specified by user policy is being applied.

NOTE: This policy does not apply on Android. To enable IsolateOrigins on Android, use the IsolateOriginsAndroid policy setting.


Example value: https://example.com/,https://othersite.org/</string><string id="ManagedBookmarks">Managed Bookmarks</string><string id="ManagedBookmarks_Explain">Configures a list of managed bookmarks.

The policy consists of a list of bookmarks whereas each bookmark is a dictionary containing the keys &quot;name&quot; and &quot;url&quot; which hold the bookmark's name and its target. A subfolder may be configured by defining a bookmark without an &quot;url&quot; key but with an additional &quot;children&quot; key which itself contains a list of bookmarks as defined above (some of which may be folders again). Google Chrome amends incomplete URLs as if they were submitted via the Omnibox, for example &quot;google.com&quot; becomes &quot;https://google.com/&quot;.

These bookmarks are placed in a folder that can't be modified by the user (but the user can choose to hide it from the bookmark bar). By default the folder name is &quot;Managed bookmarks&quot; but it can be customized by adding to the list of bookmarks a dictionary containing the key &quot;toplevel_name&quot; with the desired folder name as the value.

Managed bookmarks are not synced to the user account and can't be modified by extensions.

Example value:

[
  {
    &quot;toplevel_name&quot;: &quot;My managed bookmarks folder&quot;
  }, 
  {
    &quot;url&quot;: &quot;google.com&quot;, 
    &quot;name&quot;: &quot;Google&quot;
  }, 
  {
    &quot;url&quot;: &quot;youtube.com&quot;, 
    &quot;name&quot;: &quot;Youtube&quot;
  }, 
  {
    &quot;name&quot;: &quot;Chrome links&quot;, 
    &quot;children&quot;: [
      {
        &quot;url&quot;: &quot;chromium.org&quot;, 
        &quot;name&quot;: &quot;Chromium&quot;
      }, 
      {
        &quot;url&quot;: &quot;dev.chromium.org&quot;, 
        &quot;name&quot;: &quot;Chromium Developers&quot;
      }
    ]
  }
]</string><string id="MaxConnectionsPerProxy">Maximal number of concurrent connections to the proxy server</string><string id="MaxConnectionsPerProxy_Explain">Specifies the maximal number of simultaneous connections to the proxy server.

Some proxy servers can not handle high number of concurrent connections per client and this can be solved by setting this policy to a lower value.

The value of this policy should be lower than 100 and higher than 6 and the default value is 32.

Some web apps are known to consume many connections with hanging GETs, so lowering below 32 may lead to browser networking hangs if too many such web apps are open. Lower below the default at your own risk.

If this policy is left not set the default value will be used which is 32.</string><string id="MaxInvalidationFetchDelay">Maximum fetch delay after a policy invalidation</string><string id="MaxInvalidationFetchDelay_Explain">Specifies the maximum delay in milliseconds between receiving a policy invalidation and fetching the new policy from the device management service.

Setting this policy overrides the default value of 5000 milliseconds. Valid values for this policy are in the range from 1000 (1 second) to 300000 (5 minutes). Any values not in this range will be clamped to the respective boundary.

Leaving this policy not set will make Google Chrome use the default value of 5000 milliseconds.</string><string id="MediaCacheSize">Set media disk cache size in bytes</string><string id="MediaCacheSize_Explain">Configures the cache size that Google Chrome will use for storing cached media files on the disk.

If you set this policy, Google Chrome will use the provided cache size regardless whether the user has specified the '--media-cache-size' flag or not. The value specified in this policy is not a hard boundary but rather a suggestion to the caching system, any value below a few megabytes is too small and will be rounded up to a sane minimum.

If the value of this policy is 0, the default cache size will be used but the user will not be able to change it.

If this policy is not set the default size will be used and the user will be able to override it with the --media-cache-size flag.</string><string id="MediaRouterCastAllowAllIPs">Allow Google Cast to connect to Cast devices on all IP addresses.</string><string id="MediaRouterCastAllowAllIPs_Explain">If this policy is set to true, Google Cast will connect to Cast devices on all IP addresses, not just RFC1918/RFC4193 private addresses.

If this policy is set to false, Google Cast will connect to Cast devices on RFC1918/RFC4193 private addresses only.

If this policy is not set, Google Cast will connect to Cast devices on RFC1918/RFC4193 private addresses only, unless the CastAllowAllIPs feature is enabled.

If the policy &quot;EnableMediaRouter&quot; is set to false, then this policy's value would have no effect.</string><string id="MetricsReportingEnabled">Enable reporting of usage and crash-related data</string><string id="MetricsReportingEnabled_Explain">Enables anonymous reporting of usage and crash-related data about Google Chrome to Google and prevents users from changing this setting.

If this setting is enabled, anonymous reporting of usage and crash-related
data is sent to Google.  If it is disabled, this information is not sent
to Google.  In both cases, users cannot change or override the setting.
If this policy is left not set, the setting will be what the user chose
upon installation / first run.

This policy is available only on Windows instances that are joined to a Microsoft® Active Directory® domain. or Windows 10 Pro or Enterprise instances that enrolled for device management.
(For Chrome OS, see DeviceMetricsReportingEnabled.)</string><string id="NetworkPredictionOptions">Enable network prediction</string><string id="NetworkPredictionOptions_Explain">Enables network prediction in Google Chrome and prevents users from changing this setting.

This controls DNS prefetching, TCP and SSL preconnection and prerendering of web pages.

If you set this policy, users cannot change or override this setting in Google Chrome.

If this policy is left not set, network prediction will be enabled but the user will be able to change it.</string><string id="NetworkPredictionOptions_NetworkPredictionAlways">Predict network actions on any network connection</string><string id="NetworkPredictionOptions_NetworkPredictionWifiOnly">Predict network actions on any network that is not cellular.
(Deprecated in 50, removed in 52. After 52, if value 1 is set, it will be treated as 0 - predict network actions on any network connection.)</string><string id="NetworkPredictionOptions_NetworkPredictionNever">Do not predict network actions on any network connection</string><string id="OverrideSecurityRestrictionsOnInsecureOrigin">Origins or hostname patterns for which restrictions on
insecure origins should not apply</string><string id="OverrideSecurityRestrictionsOnInsecureOrigin_Explain">
The policy specifies a list of origins (URLs) or hostname patterns (such
as &quot;*.example.com&quot;) for which security restrictions on insecure origins
will not apply.

The intent is to allow organizations to set whitelist origins for legacy
applications that cannot deploy TLS, or to set up a staging server for
internal web development so that their developers can test out features
requiring secure contexts without having to deploy TLS on the staging
server. This policy will also prevent the origin from being labeled
&quot;Not Secure&quot; in the omnibox.

Setting a list of URLs in this policy has the same effect as setting the
command-line flag '--unsafely-treat-insecure-origin-as-secure' to a
comma-separated list of the same URLs. If the policy is set, it will
override the command-line flag.

This policy will override UnsafelyTreatInsecureOriginAsSecure, if present.

For more information on secure contexts, see
https://www.w3.org/TR/secure-contexts/.


Example value:

http://testserver.example.com/
*.example.org</string><string id="OverrideSecurityRestrictionsOnInsecureOriginDesc">Origins or hostname patterns for which restrictions on
insecure origins should not apply</string><string id="PolicyListMultipleSourceMergeList">Allow merging list policies from different sources</string><string id="PolicyListMultipleSourceMergeList_Explain">Allows the selected policies to be merged when they come from different sources, with the same scopes and level.

If a policy is in the list, in case there is conflict between two sources, given that they have the same scopes and level, the values will be merged into a new policy list.

If a policy is in the list, in case there is conflict between two sources but also between different scopes and/or level, the policy with the highest priority will be applied.

If a policy is not in the list, in case there is any conflict between sources, scopes and/or level, the policy with the highest priority will be applied.

Example value:

ExtensionInstallWhitelist
ExtensionInstallBlacklist</string><string id="PolicyListMultipleSourceMergeListDesc">Allow merging list policies from different sources</string><string id="PromotionalTabsEnabled">Enable showing full-tab promotional content</string><string id="PromotionalTabsEnabled_Explain">Allows you to control the presentation of full-tab promotional and/or educational content in Google Chrome.

If not configured or enabled (set to true), Google Chrome may show full-tab content to users to provide product information.

If disabled (set to false), Google Chrome will not show full-tab content to users to provide product information.

This setting controls the presentation of the welcome pages that help users sign into Google Chrome, choose it as their default browser, or otherwise inform them of product features.</string><string id="PromptForDownloadLocation">Ask where to save each file before downloading</string><string id="PromptForDownloadLocation_Explain">
If the policy is enabled, the user will be asked where to save each file before downloading.
If the policy is disabled, downloads will start immediately, and the user will not be asked where to save the file.
If the policy is not configured, the user will be able to change this setting.
</string><string id="ProxySettings">Proxy settings</string><string id="ProxySettings_Explain">Configures the proxy settings for Google Chrome. These proxy settings will be available for ARC-apps too.

If you enable this setting, Google Chrome and ARC-apps ignore all proxy-related options specified from the command line.

Leaving this policy not set will allow the users to choose the proxy settings on their own.

If the ProxySettings policy is set, it will override any of the individual policies ProxyMode, ProxyPacUrl, ProxyServer, ProxyBypassList and ProxyServerMode.

The ProxyMode field allows you to specify the proxy server used by Google Chrome and prevents users from changing proxy settings.

The ProxyPacUrl field is a URL to a proxy .pac file.

The ProxyServer field is a URL of the proxy server.

The ProxyBypassList field is a list of proxy hosts that Google Chrome will bypass.

The ProxyServerMode field is deprecated in favor of the field 'ProxyMode'. It allows you to specify the proxy server used by Google Chrome and prevents users from changing proxy settings.

If you choose the value 'direct' as 'ProxyMode', a proxy will never be used and all other fields will be ignored.

If you choose the value 'system' as 'ProxyMode', the systems's proxy will be used and all other fields will be ignored.

If you choose the value 'auto_detect' as 'ProxyMode', all other fields will be ignored.

If you choose the value 'fixed_server' as 'ProxyMode', the 'ProxyServer' and 'ProxyBypassList' fields will be used.

If you choose the value 'pac_script' as 'ProxyMode', the 'ProxyPacUrl' and 'ProxyBypassList' fields will be used.

Example value:

{
  &quot;ProxyMode&quot;: &quot;direct&quot;, 
  &quot;ProxyPacUrl&quot;: &quot;https://internal.site/example.pac&quot;, 
  &quot;ProxyServer&quot;: &quot;123.123.123.123:8080&quot;, 
  &quot;ProxyServerMode&quot;: 2, 
  &quot;ProxyBypassList&quot;: &quot;https://www.example1.com,https://www.example2.com,https://internalsite/&quot;
}</string><string id="QuicAllowed">Allow QUIC protocol</string><string id="QuicAllowed_Explain">If this policy is set to true or not set usage of QUIC protocol in Google Chrome is allowed.
If this policy is set to false usage of QUIC protocol is disallowed.</string><string id="RelaunchNotification">Notify a user that a browser relaunch or device restart is recommended or required</string><string id="RelaunchNotification_Explain">Notify users that Google Chrome must be relaunched or Google Chrome OS must be restarted to apply a pending update.

This policy setting enables notifications to inform the user that a browser relaunch or device restart is recommended or required. If not set, Google Chrome indicates to the user that a relaunch is needed via subtle changes to its menu, while Google Chrome OS indicates such via a notification in the system tray. If set to 'Recommended', a recurring warning will be shown to the user that a relaunch is recommended. The user can dismiss this warning to defer the relaunch. If set to 'Required', a recurring warning will be shown to the user indicating that a browser relaunch will be forced once the notification period passes. The default period is seven days for Google Chrome and four days for Google Chrome OS, and may be configured via the RelaunchNotificationPeriod policy setting.

The user's session is restored following the relaunch/restart.</string><string id="RelaunchNotification_Recommended">Show a recurring prompt to the user indicating that a relaunch is recommended</string><string id="RelaunchNotification_Required">Show a recurring prompt to the user indicating that a relaunch is required</string><string id="RelaunchNotificationPeriod">Set the time period for update notifications</string><string id="RelaunchNotificationPeriod_Explain">Allows you to set the time period, in milliseconds, over which users are notified that Google Chrome must be relaunched or that a Google Chrome OS device must be restarted to apply a pending update.

Over this time period, the user will be repeatedly informed of the need for an update. For Google Chrome OS devices, a restart notification appears in the system tray when an upgrade is detected. For Google Chrome browsers, the app menu changes to indicate that a relaunch is needed once one third of the notification period passes. This notification changes color once two thirds of the notification period passes, and again once the full notification period has passed. The additional notifications enabled by the RelaunchNotification policy follow this same schedule.

If not set, the default period of 345600000 milliseconds (four days) is used for Google Chrome OS devices and 604800000 milliseconds (one week) for Google Chrome.</string><string id="RequireOnlineRevocationChecksForLocalAnchors">Require online OCSP/CRL checks for local trust anchors</string><string id="RequireOnlineRevocationChecksForLocalAnchors_Explain">When this setting is enabled, Google Chrome will always perform revocation checking for server certificates that successfully validate and are signed by locally-installed CA certificates.

If Google Chrome is unable to obtain revocation status information, such certificates will be treated as revoked ('hard-fail').

If this policy is not set, or it is set to false, then Google Chrome will use the existing online revocation checking settings.</string><string id="RestrictSigninToPattern">Restrict which Google accounts are allowed to be set as browser primary accounts in Google Chrome</string><string id="RestrictSigninToPattern_Explain">Contains a regular expression which is used to determine which Google accounts can be set as browser primary accounts in Google Chrome (i.e. the account that is chosen during the Sync opt-in flow).

An appropriate error is displayed if a user tries to set a browser primary account with a username that does not match this pattern.

If this policy is left not set or blank, then the user can set any Google account as a browser primary account in Google Chrome.

Example value: .*@example.com</string><string id="RoamingProfileLocation">Set the roaming profile directory</string><string id="RoamingProfileLocation_Explain">Configures the directory that Google Chrome will use for storing the roaming copy of the profiles.

If you set this policy, Google Chrome will use the provided directory to store the roaming copy of the profiles if the RoamingProfileSupportEnabled policy has been enabled. If the RoamingProfileSupportEnabled policy is disabled or left unset the value stored in this policy is not used.

See https://www.chromium.org/administrators/policy-list-3/user-data-directory-variables for a list of variables that can be used.

If this policy is left not set the default roaming profile path will be used.

Example value: ${roaming_app_data}\chrome-profile</string><string id="RoamingProfileSupportEnabled">Enable the creation of roaming copies for Google Chrome profile data</string><string id="RoamingProfileSupportEnabled_Explain">If you enable this setting, the settings stored in Google Chrome profiles like bookmarks, autofill data, passwords, etc. will also be written to a file stored in the Roaming user profile folder or a location specified by the Administrator through the RoamingProfileLocation policy. Enabling this policy disables cloud sync.

If this policy is disabled or left not set only the regular local profiles will be used.

The SyncDisabled policy disables all data synchronization, overriding RoamingProfileSupportEnabled.</string><string id="RunAllFlashInAllowMode">Extend Flash content setting to all content</string><string id="RunAllFlashInAllowMode_Explain">If you enable this setting, all Flash content embedded on websites that have been set to allow Flash in content settings -- either by the user or by enterprise policy -- will be run, including content from other origins or small content.

To control which websites are allowed to run Flash, see the &quot;DefaultPluginsSetting&quot;, &quot;PluginsAllowedForUrls&quot;, and &quot;PluginsBlockedForUrls&quot; policies.

If this setting is disabled or not set, Flash content from other origins or small content might be blocked.</string><string id="SSLErrorOverrideAllowed">Allow proceeding from the SSL warning page</string><string id="SSLErrorOverrideAllowed_Explain">Chrome shows a warning page when users navigate to sites that have SSL errors. By default or when this policy is set to true, users are allowed to click through these warning pages.
Setting this policy to false disallows users to click through any warning page.</string><string id="SSLVersionMin">Minimum SSL version enabled</string><string id="SSLVersionMin_Explain">If this policy is not configured then Google Chrome uses a default minimum version which is TLS 1.0.

Otherwise it may be set to one of the following values: &quot;tls1&quot;, &quot;tls1.1&quot; or &quot;tls1.2&quot;. When set, Google Chrome will not use SSL/TLS versions less than the specified version. An unrecognized value will be ignored.

Example value: tls1</string><string id="SSLVersionMin_TLSv1">TLS 1.0</string><string id="SSLVersionMin_TLSv1_1">TLS 1.1</string><string id="SSLVersionMin_TLSv1_2">TLS 1.2</string><string id="SafeBrowsingForTrustedSourcesEnabled">Enable Safe Browsing for trusted sources</string><string id="SafeBrowsingForTrustedSourcesEnabled_Explain">Identify if Google Chrome can allow download without Safe Browsing checks when it's from a trusted source.

When False, downloaded files will not be sent to be analyzed by Safe Browsing when it's from a trusted source.

When not set (or set to True), downloaded files are sent to be analyzed by Safe Browsing, even when it's from a trusted source.

Note that these restrictions apply to downloads triggered from web page content, as well as the 'download link...' context menu option. These restrictions do not apply to the save / download of the currently displayed page, nor does it apply to saving as PDF from the printing options.

This policy is available only on Windows instances that are joined to a Microsoft® Active Directory® domain. or Windows 10 Pro or Enterprise instances that enrolled for device management.</string><string id="SafeSitesFilterBehavior">Control SafeSites adult content filtering.</string><string id="SafeSitesFilterBehavior_Explain">This policy controls the application of the SafeSites URL filter.
This filter uses the Google Safe Search API to classify URLs as pornographic or not.

When this policy is not configured or set to &quot;Do not filter sites for adult content&quot;, sites will not be filtered.

When this policy is set to &quot;Filter top level sites for adult content&quot;, sites classified as pornographic will be filtered.</string><string id="SafeSitesFilterBehavior_SafeSitesFilterDisabled">Do not filter sites for adult content</string><string id="SafeSitesFilterBehavior_SafeSitesFilterEnabled">Filter top level sites (but not embedded iframes) for adult content</string><string id="SavingBrowserHistoryDisabled">Disable saving browser history</string><string id="SavingBrowserHistoryDisabled_Explain">Disables saving browser history in Google Chrome and prevents users from changing this setting.

If this setting is enabled, browsing history is not saved. This setting also disables tab syncing.

If this setting is disabled or not set, browsing history is saved.</string><string id="SearchSuggestEnabled">Enable search suggestions</string><string id="SearchSuggestEnabled_Explain">Enables search suggestions in Google Chrome's omnibox and prevents users from changing this setting.

If you enable this setting, search suggestions are used.

If you disable this setting, search suggestions are never used.

If you enable or disable this setting, users cannot change or override this setting in Google Chrome.

If this policy is left not set, this will be enabled but the user will be able to change it.</string><string id="SecurityKeyPermitAttestation">URLs/domains automatically permitted direct Security Key attestation</string><string id="SecurityKeyPermitAttestation_Explain">Specifies URLs and domains for which no prompt will be shown when attestation certificates from Security Keys are requested. Additionally, a signal will be sent to the Security Key indicating that individual attestation may be used. Without this, users will be prompted in Chrome 65+ when sites request attestation of Security Keys.

URLs (like https://example.com/some/path) will only match as U2F appIDs. Domains (like example.com) only match as webauthn RP IDs. Thus, to cover both U2F and webauthn APIs for a given site, both the appID URL and domain would need to be listed.

Example value:

https://example.com</string><string id="SecurityKeyPermitAttestationDesc">URLs/domains automatically permitted direct Security Key attestation</string><string id="ShowAppsShortcutInBookmarkBar">Show the apps shortcut in the bookmark bar</string><string id="ShowAppsShortcutInBookmarkBar_Explain">Enables or disables the apps shortcut in the bookmark bar.

If this policy is not set then the user can choose to show or hide the apps shortcut from the bookmark bar context menu.

If this policy is configured then the user can't change it, and the apps shortcut is always shown or never shown.</string><string id="SignedHTTPExchangeEnabled">Enable Signed HTTP Exchange (SXG) support</string><string id="SignedHTTPExchangeEnabled_Explain">Enable support for Signed HTTP Exchange (SXG).

If this policy is unset or set to Enabled, Google Chrome will accept web contents served as Signed HTTP Exchanges.

If this policy is set to Disabled, Signed HTTP Exchanges cannot be loaded.</string><string id="SitePerProcess">Enable Site Isolation for every site</string><string id="SitePerProcess_Explain">
You might want to look at the IsolateOrigins policy setting to get the best of both worlds, isolation and limited impact for users, by using IsolateOrigins with a list of the sites you want to isolate. This setting, SitePerProcess, isolates all sites.
If the policy is enabled, each site will run in its own process.
If the policy is disabled, then both IsolateOrigins and SitePerProcess features will be disabled. Users will still be able to enable SitePerProcess manually, via command line flags.
If the policy is not configured, the user will be able to change this setting.
On Google Chrome OS, it is recommended to also set the DeviceLoginScreenSitePerProcess device policy to the same value. If the values specified by the two policies don't match, a delay may be incurred when entering a user session while the value specified by user policy is being applied.

NOTE: This policy does not apply on Android. To enable SitePerProcess on Android, use the SitePerProcessAndroid policy setting.
</string><string id="SpellCheckServiceEnabled">Enable or disable spell checking web service</string><string id="SpellCheckServiceEnabled_Explain">Google Chrome can use a Google web service to help resolve spelling errors. If this setting is enabled, then this service is always used. If this setting is disabled, then this service is never used.

Spell checking can still be performed using a downloaded dictionary; this policy only controls the usage of the online service.

If this setting is not configured then users can choose whether the spell checking service should be used or not.</string><string id="SpellcheckEnabled">Enable spellcheck</string><string id="SpellcheckEnabled_Explain">If this policy is not set or enabled, the user is allowed to use spellcheck.

If this policy is disabled, the user is not allowed to use spellcheck. The SpellcheckLanguage and SpellcheckLanguageBlacklist policies will also be ignored when this policy is disabled.
</string><string id="SpellcheckLanguage">Force enable spellcheck languages</string><string id="SpellcheckLanguage_Explain">Force-enables spellcheck languages. Unrecognized languages in that list will be ignored.

If you enable this policy, spellcheck will be enabled for the languages specified, in addition to the languages for which the user has enabled spellcheck.

If you do not set this policy, or disable it, there will be no change to the user's spellcheck preferences.

If the SpellcheckEnabled policy is set to disabled, this policy will have no effect.

If a language is included in both this policy and the SpellcheckLanguageBlacklist policy, this policy is prioritized and the spellcheck language is enabled.

The currently supported languages are: af, bg, ca, cs, da, de, el, en-AU, en-CA, en-GB, en-US, es, es-419, es-AR, es-ES, es-MX, es-US, et, fa, fo, fr, he, hi, hr, hu, id, it, ko, lt, lv, nb, nl, pl, pt-BR, pt-PT, ro, ru, sh, sk, sl, sq, sr, sv, ta, tg, tr, uk, vi.

Example value:

fr
es</string><string id="SpellcheckLanguageDesc">Force enable spellcheck languages</string><string id="SpellcheckLanguageBlacklist">Force disable spellcheck languages</string><string id="SpellcheckLanguageBlacklist_Explain">Force-disables spellcheck languages. Unrecognized languages in that list will be ignored.

If you enable this policy, spellcheck will be disabled for the languages specified. The user can still enable or disable spellcheck for languages not in the list.

If you do not set this policy, or disable it, there will be no change to the user's spellcheck preferences.

If the SpellcheckEnabled policy is set to disabled, this policy will have no effect.

If a language is included in both this policy and the SpellcheckLanguage policy, the SpellcheckLanguage policy is prioritized and the spellcheck language will be enabled.

The currently supported languages are: af, bg, ca, cs, da, de, el, en-AU, en-CA, en-GB, en-US, es, es-419, es-AR, es-ES, es-MX, es-US, et, fa, fo, fr, he, hi, hr, hu, id, it, ko, lt, lv, nb, nl, pl, pt-BR, pt-PT, ro, ru, sh, sk, sl, sq, sr, sv, ta, tg, tr, uk, vi.

Example value:

fr
es</string><string id="SpellcheckLanguageBlacklistDesc">Force disable spellcheck languages</string><string id="SuppressUnsupportedOSWarning">Suppress the unsupported OS warning</string><string id="SuppressUnsupportedOSWarning_Explain">Suppresses the warning that appears when Google Chrome is running on a computer or operating system that is no longer supported.</string><string id="SyncDisabled">Disable synchronization of data with Google</string><string id="SyncDisabled_Explain">Disables data synchronization in Google Chrome using Google-hosted synchronization services and prevents users from changing this setting.

If you enable this setting, users cannot change or override this setting in Google Chrome.

If this policy is left not set Google Sync will be available for the user to choose whether to use it or not.

To fully disable Google Sync, it is recommended that you disable the Google Sync service in the Google Admin console.

This policy should not be enabled when RoamingProfileSupportEnabled policy is set to enabled as that feature shares the same client side functionality. The Google-hosted synchronization is disabled in this case completely.</string><string id="TabLifecyclesEnabled">Enables or disables tab lifecycles</string><string id="TabLifecyclesEnabled_Explain">The tab lifecyles feature reclaims CPU and eventually memory associated with running tabs that have not been used in a long period of time, by first throttling them, then freezing them and finally discarding them.

If the policy is set to false then tab lifecycles are disabled, and all tabs will be left running normally.

If the policy is set to true or left unspecified then tab lifecycles are enabled.</string><string id="TaskManagerEndProcessEnabled">Enable ending processes in Task Manager</string><string id="TaskManagerEndProcessEnabled_Explain">If set to false, the 'End process' button is disabled in the Task Manager.

If set to true or not configured, the user can end processes in the Task Manager.</string><string id="ThirdPartyBlockingEnabled">Enable third party software injection blocking</string><string id="ThirdPartyBlockingEnabled_Explain">If the policy is set to false then third party software will be allowed to inject executable code into Chrome's processes. If the policy is unset or set to true then third party software will be prevented from injecting executable code into Chrome's processes.</string><string id="TranslateEnabled">Enable Translate</string><string id="TranslateEnabled_Explain">Enables the integrated Google Translate service on Google Chrome.

If you enable this setting, Google Chrome will offer translation functionality to the user by showing an integrated translate toolbar (when appropriate) and a translate option on the right-click context menu.

If you disable this setting, all built-in translate features will be disabled.

If you enable or disable this setting, users cannot change or override this setting in Google Chrome.

If this setting is left not set the user can decide to use this function or not.</string><string id="URLBlacklist">Block access to a list of URLs</string><string id="URLBlacklist_Explain">This policy prevents the user from loading web pages from blacklisted URLs. The blacklist provides a list of URL patterns that specify which URLs will be blacklisted.

A URL pattern has to be formatted according to https://www.chromium.org/administrators/url-blacklist-filter-format.

Exceptions can be defined in the URL whitelist policy. These policies are limited to 1000 entries; subsequent entries will be ignored.

Note that it is not recommended to block internal 'chrome://*' URLs since this may lead to unexpected errors.

From M73 you can block 'javascript://*' URLs. However, it affects only JavaScript typed in address bar (or, for example, bookmarklets). Note that in-page JavaScript URLs, as long as dynamically loaded data, are not subject to this policy. For example, if you block 'example.com/abc', page 'example.com' will still be able to load 'example.com/abc' via XMLHTTPRequest.

If this policy is not set no URL will be blacklisted in the browser.

Example value:

example.com
https://ssl.server.com
hosting.com/bad_path
https://server:8080/path
.exact.hostname.com
file://*
custom_scheme:*
*</string><string id="URLBlacklistDesc">Block access to a list of URLs</string><string id="URLWhitelist">Allow access to a list of URLs</string><string id="URLWhitelist_Explain">Allows access to the listed URLs, as exceptions to the URL blacklist.

See the description of the URL blacklist policy for the format of entries of this list.

This policy can be used to open exceptions to restrictive blacklists. For example, '*' can be blacklisted to block all requests, and this policy can be used to allow access to a limited list of URLs. It can be used to open exceptions to certain schemes, subdomains of other domains, ports, or specific paths.

The most specific filter will determine if a URL is blocked or allowed. The whitelist takes precedence over the blacklist.

This policy is limited to 1000 entries; subsequent entries will be ignored.

If this policy is not set there will be no exceptions to the blacklist from the 'URLBlacklist' policy.

Example value:

example.com
https://ssl.server.com
hosting.com/good_path
https://server:8080/path
.exact.hostname.com</string><string id="URLWhitelistDesc">Allow access to a list of URLs</string><string id="UrlKeyedAnonymizedDataCollectionEnabled">Enable URL-keyed anonymized data collection</string><string id="UrlKeyedAnonymizedDataCollectionEnabled_Explain">Enable URL-keyed anonymized data collection in Google Chrome and prevents users from changing this setting.

URL-keyed anonymized data collection sends URLs of pages the user visits to Google to make searches and browsing better.

If you enable this policy, URL-keyed anonymized data collection is always active.

If you disable this policy, URL-keyed anonymized data collection is never active.

If this policy is left not set, URL-keyed anonymized data collection will be enabled but the user will be able to change it.</string><string id="UserDataDir">Set user data directory</string><string id="UserDataDir_Explain">Configures the directory that Google Chrome will use for storing user data.

If you set this policy, Google Chrome will use the provided directory regardless whether the user has specified the '--user-data-dir' flag or not. To avoid data loss or other unexpected errors this policy should not be set to a volume's root directory or to a directory used for other purposes, because Google Chrome manages its contents.

See https://www.chromium.org/administrators/policy-list-3/user-data-directory-variables for a list of variables that can be used.

If this policy is left not set the default profile path will be used and the user will be able to override it with the '--user-data-dir' command line flag.

Example value: ${users}/${user_name}/Chrome</string><string id="VideoCaptureAllowed">Allow or deny video capture</string><string id="VideoCaptureAllowed_Explain">If enabled or not configured (default), the user will be prompted for
video capture access except for URLs configured in the
VideoCaptureAllowedUrls list which will be granted access without prompting.

When this policy is disabled, the user will never be prompted and video
capture only be available to URLs configured in VideoCaptureAllowedUrls.

This policy affects all types of video inputs and not only the built-in camera.</string><string id="VideoCaptureAllowedUrls">URLs that will be granted access to video capture devices without prompt</string><string id="VideoCaptureAllowedUrls_Explain">Patterns in this list will be matched against the security
origin of the requesting URL.  If a match is found, access to video
capture devices will be granted without prompt.

NOTE: Until version 45, this policy was only supported in Kiosk mode.

Example value:

https://www.example.com/
https://[*.]example.edu/</string><string id="VideoCaptureAllowedUrlsDesc">URLs that will be granted access to video capture devices without prompt</string><string id="WPADQuickCheckEnabled">Enable WPAD optimization</string><string id="WPADQuickCheckEnabled_Explain">Allows to turn off WPAD (Web Proxy Auto-Discovery) optimization in Google Chrome.

If this policy is set to false, WPAD optimization is disabled causing Google Chrome to wait longer for DNS-based WPAD servers.  If the policy is not set or is enabled, WPAD optimization is enabled.

Independent of whether or how this policy is set, the WPAD optimization setting cannot be changed by users.</string><string id="WebAppInstallForceList">Configure list of force-installed Web Apps</string><string id="WebAppInstallForceList_Explain">Specifies a list of websites that are installed silently, without user interaction, and which cannot be uninstalled nor disabled by the user.

Each list item of the policy is an object with a mandatory member: &quot;url&quot; and two optional members: &quot;default_launch_container&quot; and &quot;create_desktop_shortcut&quot;. &quot;url&quot; should be the URL of the web app to install, &quot;launch_container&quot; should be either &quot;window&quot; or &quot;tab&quot; to indicate how the Web App will be opened once installed, and &quot;create_desktop_shortcut&quot; should be true if a desktop shortcut should be created on Linux and Windows. If &quot;default_launch_container&quot; is omitted, the app will open in a tab by default. Regardless of the value of &quot;default_launch_container&quot;, users are able to change which container the app will open in. If &quot;create_desktop_shortcuts&quot; is omitted, no desktop shortcuts will be created.

Example value:

[
  {
    &quot;url&quot;: &quot;https://www.google.com/maps&quot;, 
    &quot;create_desktop_shortcut&quot;: true, 
    &quot;default_launch_container&quot;: &quot;window&quot;
  }, 
  {
    &quot;url&quot;: &quot;https://docs.google.com&quot;, 
    &quot;default_launch_container&quot;: &quot;tab&quot;
  }
]</string><string id="WebDriverOverridesIncompatiblePolicies">Allow WebDriver to Override Incompatible Policies</string><string id="WebDriverOverridesIncompatiblePolicies_Explain">This policy allows users of the WebDriver feature to override
policies which can interfere with its operation.

Currently this policy disables SitePerProcess and IsolateOrigins policies.

If the policy is enabled, WebDriver will be able to override incomaptible
policies.
If the policy is disabled or not configured, WebDriver will not be allowed
to override incompatible policies.</string><string id="WebRtcEventLogCollectionAllowed">Allow collection of WebRTC event logs from Google services</string><string id="WebRtcEventLogCollectionAllowed_Explain">
If the policy is set to true, Google Chrome is allowed to collect WebRTC event logs from Google services (e.g. Google Meet), and upload those logs to Google.

If the policy is set to false, or is unset, Google Chrome may not collect nor upload such logs.

These logs contain diagnostic information helpful when debugging issues with audio or video calls in Chrome, such as the time and size of sent and received RTP packets, feedback about congestion on the network, and metadata about time and quality of audio and video frames. These logs do not contain audio or video contents from the call.

This data collection by Chrome can only be triggered by Google's web services, such as Google Hangouts or Google Meet.

Google may associate these logs, by means of a session ID, with other logs collected by the Google service itself; this is intended to make debugging easier.
</string><string id="WebRtcUdpPortRange">Restrict the range of local UDP ports used by WebRTC</string><string id="WebRtcUdpPortRange_Explain">If the policy is set, the UDP port range used by WebRTC is restricted to the specified port interval (endpoints included).

If the policy is not set, or if it is set to the empty string or an invalid port range, WebRTC is allowed to use any available local UDP port.

Example value: 10000-11999</string><string id="WelcomePageOnOSUpgradeEnabled">Enable showing the welcome page on the first browser launch following OS upgrade</string><string id="WelcomePageOnOSUpgradeEnabled_Explain">If this policy is set to true or not configured, the browser will re-show the welcome page on the first launch following an OS upgrade.

If this policy is set to false, the browser will not re-show the welcome page on the first launch following an OS upgrade.</string></stringTable><presentationTable><presentation id="DefaultCookiesSetting"><dropdownList refId="DefaultCookiesSetting">Default cookies setting</dropdownList></presentation><presentation id="DefaultImagesSetting"><dropdownList refId="DefaultImagesSetting">Default images setting</dropdownList></presentation><presentation id="DefaultJavaScriptSetting"><dropdownList refId="DefaultJavaScriptSetting">Default JavaScript setting</dropdownList></presentation><presentation id="DefaultPluginsSetting"><dropdownList refId="DefaultPluginsSetting">Default Flash setting</dropdownList></presentation><presentation id="DefaultPopupsSetting"><dropdownList refId="DefaultPopupsSetting">Default popups setting</dropdownList></presentation><presentation id="DefaultNotificationsSetting"><dropdownList refId="DefaultNotificationsSetting">Default notification setting</dropdownList></presentation><presentation id="DefaultGeolocationSetting"><dropdownList refId="DefaultGeolocationSetting">Default geolocation setting</dropdownList></presentation><presentation id="DefaultWebBluetoothGuardSetting"><dropdownList refId="DefaultWebBluetoothGuardSetting">Control use of the Web Bluetooth API</dropdownList></presentation><presentation id="DefaultWebUsbGuardSetting"><dropdownList refId="DefaultWebUsbGuardSetting">Control use of the WebUSB API</dropdownList></presentation><presentation id="AutoSelectCertificateForUrls"><listBox refId="AutoSelectCertificateForUrlsDesc">Automatically select client certificates for these sites</listBox></presentation><presentation id="CookiesAllowedForUrls"><listBox refId="CookiesAllowedForUrlsDesc">Allow cookies on these sites</listBox></presentation><presentation id="CookiesBlockedForUrls"><listBox refId="CookiesBlockedForUrlsDesc">Block cookies on these sites</listBox></presentation><presentation id="CookiesSessionOnlyForUrls"><listBox refId="CookiesSessionOnlyForUrlsDesc">Limit cookies from matching URLs to the current session</listBox></presentation><presentation id="ImagesAllowedForUrls"><listBox refId="ImagesAllowedForUrlsDesc">Allow images on these sites</listBox></presentation><presentation id="ImagesBlockedForUrls"><listBox refId="ImagesBlockedForUrlsDesc">Block images on these sites</listBox></presentation><presentation id="JavaScriptAllowedForUrls"><listBox refId="JavaScriptAllowedForUrlsDesc">Allow JavaScript on these sites</listBox></presentation><presentation id="JavaScriptBlockedForUrls"><listBox refId="JavaScriptBlockedForUrlsDesc">Block JavaScript on these sites</listBox></presentation><presentation id="PluginsAllowedForUrls"><listBox refId="PluginsAllowedForUrlsDesc">Allow the Flash plugin on these sites</listBox></presentation><presentation id="PluginsBlockedForUrls"><listBox refId="PluginsBlockedForUrlsDesc">Block the Flash plugin on these sites</listBox></presentation><presentation id="PopupsAllowedForUrls"><listBox refId="PopupsAllowedForUrlsDesc">Allow popups on these sites</listBox></presentation><presentation id="RegisteredProtocolHandlers"><textBox refId="RegisteredProtocolHandlers"><label>Register protocol handlers</label></textBox></presentation><presentation id="PopupsBlockedForUrls"><listBox refId="PopupsBlockedForUrlsDesc">Block popups on these sites</listBox></presentation><presentation id="NotificationsAllowedForUrls"><listBox refId="NotificationsAllowedForUrlsDesc">Allow notifications on these sites</listBox></presentation><presentation id="NotificationsBlockedForUrls"><listBox refId="NotificationsBlockedForUrlsDesc">Block notifications on these sites</listBox></presentation><presentation id="WebUsbAllowDevicesForUrls"><textBox refId="WebUsbAllowDevicesForUrls"><label>Automatically grant permission to these sites to connect to USB devices with the given vendor and product IDs.</label></textBox></presentation><presentation id="WebUsbAskForUrls"><listBox refId="WebUsbAskForUrlsDesc">Allow WebUSB on these sites</listBox></presentation><presentation id="WebUsbBlockedForUrls"><listBox refId="WebUsbBlockedForUrlsDesc">Block WebUSB on these sites</listBox></presentation><presentation id="DefaultSearchProviderEnabled"/><presentation id="DefaultSearchProviderName"><textBox refId="DefaultSearchProviderName"><label>Default search provider name</label></textBox></presentation><presentation id="DefaultSearchProviderKeyword"><textBox refId="DefaultSearchProviderKeyword"><label>Default search provider keyword</label></textBox></presentation><presentation id="DefaultSearchProviderSearchURL"><textBox refId="DefaultSearchProviderSearchURL"><label>Default search provider search URL</label></textBox></presentation><presentation id="DefaultSearchProviderSuggestURL"><textBox refId="DefaultSearchProviderSuggestURL"><label>Default search provider suggest URL</label></textBox></presentation><presentation id="DefaultSearchProviderIconURL"><textBox refId="DefaultSearchProviderIconURL"><label>Default search provider icon</label></textBox></presentation><presentation id="DefaultSearchProviderEncodings"><listBox refId="DefaultSearchProviderEncodingsDesc">Default search provider encodings</listBox></presentation><presentation id="DefaultSearchProviderAlternateURLs"><listBox refId="DefaultSearchProviderAlternateURLsDesc">List of alternate URLs for the default search provider</listBox></presentation><presentation id="DefaultSearchProviderImageURL"><textBox refId="DefaultSearchProviderImageURL"><label>Parameter providing search-by-image feature for the default search provider</label></textBox></presentation><presentation id="DefaultSearchProviderNewTabURL"><textBox refId="DefaultSearchProviderNewTabURL"><label>Default search provider new tab page URL</label></textBox></presentation><presentation id="DefaultSearchProviderSearchURLPostParams"><textBox refId="DefaultSearchProviderSearchURLPostParams"><label>Parameters for search URL which uses POST</label></textBox></presentation><presentation id="DefaultSearchProviderSuggestURLPostParams"><textBox refId="DefaultSearchProviderSuggestURLPostParams"><label>Parameters for suggest URL which uses POST</label></textBox></presentation><presentation id="DefaultSearchProviderImageURLPostParams"><textBox refId="DefaultSearchProviderImageURLPostParams"><label>Parameters for image URL which uses POST</label></textBox></presentation><presentation id="RemoteAccessClientFirewallTraversal"/><presentation id="RemoteAccessHostClientDomain"><textBox refId="RemoteAccessHostClientDomain"><label>Configure the required domain name for remote access clients</label></textBox></presentation><presentation id="RemoteAccessHostDomain"><textBox refId="RemoteAccessHostDomain"><label>Configure the required domain name for remote access hosts</label></textBox></presentation><presentation id="RemoteAccessHostRequireTwoFactor"/><presentation id="PasswordManagerAllowShowPasswords"/><presentation id="ProxyServerMode"><dropdownList refId="ProxyServerMode">Choose how to specify proxy server settings</dropdownList></presentation><presentation id="DefaultSearchProviderInstantURL"><textBox refId="DefaultSearchProviderInstantURL"><label>Default search provider instant URL</label></textBox></presentation><presentation id="DefaultSearchProviderSearchTermsReplacementKey"><textBox refId="DefaultSearchProviderSearchTermsReplacementKey"><label>Parameter controlling search term placement for the default search provider</label></textBox></presentation><presentation id="DefaultSearchProviderInstantURLPostParams"><textBox refId="DefaultSearchProviderInstantURLPostParams"><label>Parameters for instant URL which uses POST</label></textBox></presentation><presentation id="DefaultMediaStreamSetting"><dropdownList refId="DefaultMediaStreamSetting">Default mediastream setting</dropdownList></presentation><presentation id="SupervisedUserCreationEnabled"/><presentation id="SafeBrowsingExtendedReportingOptInAllowed"/><presentation id="DnsPrefetchingEnabled"/><presentation id="DisableSpdy"/><presentation id="DisabledSchemes"><listBox refId="DisabledSchemesDesc">List of disabled protocol schemes</listBox></presentation><presentation id="JavascriptEnabled"/><presentation id="IncognitoEnabled"/><presentation id="ForceSafeSearch"/><presentation id="ForceYouTubeSafetyMode"/><presentation id="AutoFillEnabled"/><presentation id="DisabledPlugins"><listBox refId="DisabledPluginsDesc">List of disabled plugins</listBox></presentation><presentation id="EnabledPlugins"><listBox refId="EnabledPluginsDesc">List of enabled plugins</listBox></presentation><presentation id="DisabledPluginsExceptions"><listBox refId="DisabledPluginsExceptionsDesc">List of exceptions to the list of disabled plugins</listBox></presentation><presentation id="DisablePluginFinder"/><presentation id="SigninAllowed"/><presentation id="EnableDeprecatedWebBasedSignin"/><presentation id="ClearSiteDataOnExit"/><presentation id="DeveloperToolsDisabled"/><presentation id="InstantEnabled"/><presentation id="AlwaysAuthorizePlugins"/><presentation id="HideWebStorePromo"/><presentation id="EnterpriseWebStoreURL"><textBox refId="EnterpriseWebStoreURL"><label>Enterprise web store URL (deprecated)</label></textBox></presentation><presentation id="EnterpriseWebStoreName"><textBox refId="EnterpriseWebStoreName"><label>Enterprise web store name (deprecated)</label></textBox></presentation><presentation id="EnableCommonNameFallbackForLocalAnchors"/><presentation id="ForceBrowserSignin"/><presentation id="SSLVersionFallbackMin"><dropdownList refId="SSLVersionFallbackMin">Minimum TLS version to fallback to</dropdownList></presentation><presentation id="RC4Enabled"/><presentation id="DHEEnabled"/><presentation id="PacHttpsUrlStrippingEnabled"/><presentation id="UnsafelyTreatInsecureOriginAsSecure"><listBox refId="UnsafelyTreatInsecureOriginAsSecureDesc">Origins or hostname patterns for which restrictions on
insecure origins should not apply</listBox></presentation><presentation id="MachineLevelUserCloudPolicyEnrollmentToken"><textBox refId="MachineLevelUserCloudPolicyEnrollmentToken"><label>The enrollment token of cloud policy on desktop</label></textBox></presentation><presentation id="TabUnderAllowed"/><presentation id="ExtensionInstallBlacklist"><listBox refId="ExtensionInstallBlacklistDesc">Extension IDs the user should be prevented from installing (or * for all)</listBox></presentation><presentation id="ExtensionInstallWhitelist"><listBox refId="ExtensionInstallWhitelistDesc">Extension IDs to exempt from the blacklist</listBox></presentation><presentation id="ExtensionInstallForcelist"><listBox refId="ExtensionInstallForcelistDesc">Extension/App IDs and update URLs to be silently installed</listBox></presentation><presentation id="ExtensionInstallSources"><listBox refId="ExtensionInstallSourcesDesc">URL patterns to allow extension, app, and user script installs from</listBox></presentation><presentation id="ExtensionAllowedTypes"><listBox refId="ExtensionAllowedTypesDesc">Types of extensions/apps that are allowed to be installed</listBox></presentation><presentation id="ExtensionAllowInsecureUpdates"/><presentation id="ExtensionSettings"><textBox refId="ExtensionSettings"><label>Extension management settings</label></textBox></presentation><presentation id="UninstallBlacklistedExtensions"/><presentation id="EnableMediaRouter"/><presentation id="ShowCastIconInToolbar"/><presentation id="AuthSchemes"><textBox refId="AuthSchemes"><label>Supported authentication schemes</label></textBox></presentation><presentation id="DisableAuthNegotiateCnameLookup"/><presentation id="EnableAuthNegotiatePort"/><presentation id="AuthServerWhitelist"><textBox refId="AuthServerWhitelist"><label>Authentication server whitelist</label></textBox></presentation><presentation id="AuthNegotiateDelegateWhitelist"><textBox refId="AuthNegotiateDelegateWhitelist"><label>Kerberos delegation server whitelist</label></textBox></presentation><presentation id="AllowCrossOriginAuthPrompt"/><presentation id="AlternativeBrowserPath"><textBox refId="AlternativeBrowserPath"><label>Alternative browser to launch for configured websites.</label></textBox></presentation><presentation id="AlternativeBrowserParameters"><listBox refId="AlternativeBrowserParametersDesc">Command-line parameters for the alternative browser.</listBox></presentation><presentation id="BrowserSwitcherChromePath"><textBox refId="BrowserSwitcherChromePath"><label>Path to Chrome for switching from the alternative browser.</label></textBox></presentation><presentation id="BrowserSwitcherChromeParameters"><listBox refId="BrowserSwitcherChromeParametersDesc">Command-line parameters for switching from the alternative browser.</listBox></presentation><presentation id="BrowserSwitcherDelay"><decimalTextBox refId="BrowserSwitcherDelay">Delay before launching alternative browser (milliseconds):</decimalTextBox></presentation><presentation id="BrowserSwitcherEnabled"/><presentation id="BrowserSwitcherExternalSitelistUrl"><textBox refId="BrowserSwitcherExternalSitelistUrl"><label>URL of an XML file that contains URLs to load in an alternative browser.</label></textBox></presentation><presentation id="BrowserSwitcherKeepLastChromeTab"/><presentation id="BrowserSwitcherUrlList"><listBox refId="BrowserSwitcherUrlListDesc">Websites to open in alternative browser</listBox></presentation><presentation id="BrowserSwitcherUrlGreylist"><listBox refId="BrowserSwitcherUrlGreylistDesc">Websites that should never trigger a browser switch.</listBox></presentation><presentation id="BrowserSwitcherUseIeSitelist"/><presentation id="NativeMessagingBlacklist"><listBox refId="NativeMessagingBlacklistDesc">Names of the forbidden native messaging hosts (or * for all)</listBox></presentation><presentation id="NativeMessagingWhitelist"><listBox refId="NativeMessagingWhitelistDesc">Names of the native messaging hosts to exempt from the blacklist</listBox></presentation><presentation id="NativeMessagingUserLevelHosts"/><presentation id="PasswordManagerEnabled"/><presentation id="PrintingEnabled"/><presentation id="CloudPrintProxyEnabled"/><presentation id="CloudPrintSubmitEnabled"/><presentation id="DisablePrintPreview"/><presentation id="PrintHeaderFooter"/><presentation id="DefaultPrinterSelection"><textBox refId="DefaultPrinterSelection"><label>Default printer selection rules</label></textBox></presentation><presentation id="PrintPreviewUseSystemDefaultPrinter"/><presentation id="ProxyMode"><dropdownList refId="ProxyMode">Choose how to specify proxy server settings</dropdownList></presentation><presentation id="ProxyServer"><textBox refId="ProxyServer"><label>Address or URL of proxy server</label></textBox></presentation><presentation id="ProxyPacUrl"><textBox refId="ProxyPacUrl"><label>URL to a proxy .pac file</label></textBox></presentation><presentation id="ProxyBypassList"><textBox refId="ProxyBypassList"><label>Comma-separated list of proxy bypass rules</label></textBox></presentation><presentation id="RemoteAccessHostClientDomainList"><listBox refId="RemoteAccessHostClientDomainListDesc">Configure the required domain names for remote access clients</listBox></presentation><presentation id="RemoteAccessHostFirewallTraversal"/><presentation id="RemoteAccessHostDomainList"><listBox refId="RemoteAccessHostDomainListDesc">Configure the required domain names for remote access hosts</listBox></presentation><presentation id="RemoteAccessHostTalkGadgetPrefix"><textBox refId="RemoteAccessHostTalkGadgetPrefix"><label>Configure the TalkGadget prefix for remote access hosts</label></textBox></presentation><presentation id="RemoteAccessHostRequireCurtain"/><presentation id="RemoteAccessHostAllowClientPairing"/><presentation id="RemoteAccessHostAllowGnubbyAuth"/><presentation id="RemoteAccessHostAllowRelayedConnection"/><presentation id="RemoteAccessHostUdpPortRange"><textBox refId="RemoteAccessHostUdpPortRange"><label>Restrict the UDP port range used by the remote access host</label></textBox></presentation><presentation id="RemoteAccessHostTokenUrl"><textBox refId="RemoteAccessHostTokenUrl"><label>URL where remote access clients should obtain their authentication token</label></textBox></presentation><presentation id="RemoteAccessHostTokenValidationUrl"><textBox refId="RemoteAccessHostTokenValidationUrl"><label>URL for validating remote access client authentication token</label></textBox></presentation><presentation id="RemoteAccessHostTokenValidationCertificateIssuer"><textBox refId="RemoteAccessHostTokenValidationCertificateIssuer"><label>Client certificate for connecting to RemoteAccessHostTokenValidationUrl</label></textBox></presentation><presentation id="RemoteAccessHostAllowUiAccessForRemoteAssistance"/><presentation id="RemoteAccessHostAllowFileTransfer"/><presentation id="SafeBrowsingEnabled"/><presentation id="SafeBrowsingExtendedReportingEnabled"/><presentation id="SafeBrowsingWhitelistDomains"><listBox refId="SafeBrowsingWhitelistDomainsDesc">Configure the list of domains on which Safe Browsing will not trigger warnings.</listBox></presentation><presentation id="PasswordProtectionWarningTrigger"><dropdownList refId="PasswordProtectionWarningTrigger">Password protection warning trigger</dropdownList></presentation><presentation id="PasswordProtectionLoginURLs"><listBox refId="PasswordProtectionLoginURLsDesc">Configure the list of enterprise login URLs where password protection service should capture fingerprint of password.</listBox></presentation><presentation id="PasswordProtectionChangePasswordURL"><textBox refId="PasswordProtectionChangePasswordURL"><label>Configure the change password URL.</label></textBox></presentation><presentation id="ShowHomeButton"/><presentation id="HomepageLocation"><textBox refId="HomepageLocation"><label>Home page URL</label></textBox></presentation><presentation id="HomepageIsNewTabPage"/><presentation id="NewTabPageLocation"><textBox refId="NewTabPageLocation"><label>New Tab page URL</label></textBox></presentation><presentation id="RestoreOnStartup"><dropdownList refId="RestoreOnStartup">Action on startup</dropdownList></presentation><presentation id="RestoreOnStartupURLs"><listBox refId="RestoreOnStartupURLsDesc">URLs to open on startup</listBox></presentation><presentation id="AbusiveExperienceInterventionEnforce"/><presentation id="AdsSettingForIntrusiveAdsSites"><dropdownList refId="AdsSettingForIntrusiveAdsSites">Ads setting for sites with intrusive ads</dropdownList></presentation><presentation id="AllowDeletingBrowserHistory"/><presentation id="AllowDinosaurEasterEgg"/><presentation id="AllowFileSelectionDialogs"/><presentation id="AllowOutdatedPlugins"/><presentation id="AllowPopupsDuringPageUnload"/><presentation id="AllowedDomainsForApps"><textBox refId="AllowedDomainsForApps"><label>Define domains allowed to access G Suite</label></textBox></presentation><presentation id="AlternateErrorPagesEnabled"/><presentation id="AlwaysOpenPdfExternally"/><presentation id="ApplicationLocaleValue"><textBox refId="ApplicationLocaleValue"><label>Application locale</label></textBox></presentation><presentation id="AudioCaptureAllowed"/><presentation id="AudioCaptureAllowedUrls"><listBox refId="AudioCaptureAllowedUrlsDesc">URLs that will be granted access to audio capture devices without prompt</listBox></presentation><presentation id="AutofillAddressEnabled"/><presentation id="AutofillCreditCardEnabled"/><presentation id="AutoplayAllowed"/><presentation id="AutoplayWhitelist"><listBox refId="AutoplayWhitelistDesc">Allow media autoplay on a whitelist of URL patterns</listBox></presentation><presentation id="BackgroundModeEnabled"/><presentation id="BlockThirdPartyCookies"/><presentation id="BookmarkBarEnabled"/><presentation id="BrowserAddPersonEnabled"/><presentation id="BrowserGuestModeEnabled"/><presentation id="BrowserNetworkTimeQueriesEnabled"/><presentation id="BrowserSignin"><dropdownList refId="BrowserSignin">Browser sign in settings</dropdownList></presentation><presentation id="BuiltInDnsClientEnabled"/><presentation id="CertificateTransparencyEnforcementDisabledForCas"><listBox refId="CertificateTransparencyEnforcementDisabledForCasDesc">Disable Certificate Transparency enforcement for a list of subjectPublicKeyInfo hashes</listBox></presentation><presentation id="CertificateTransparencyEnforcementDisabledForLegacyCas"><listBox refId="CertificateTransparencyEnforcementDisabledForLegacyCasDesc">Disable Certificate Transparency enforcement for a list of Legacy Certificate Authorities</listBox></presentation><presentation id="CertificateTransparencyEnforcementDisabledForUrls"><listBox refId="CertificateTransparencyEnforcementDisabledForUrlsDesc">Disable Certificate Transparency enforcement for a list of URLs</listBox></presentation><presentation id="ChromeCleanupEnabled"/><presentation id="ChromeCleanupReportingEnabled"/><presentation id="CloudManagementEnrollmentMandatory"/><presentation id="CloudManagementEnrollmentToken"><textBox refId="CloudManagementEnrollmentToken"><label>The enrollment token of cloud policy on desktop</label></textBox></presentation><presentation id="CloudPolicyOverridesPlatformPolicy"/><presentation id="ComponentUpdatesEnabled"/><presentation id="DefaultBrowserSettingEnabled"/><presentation id="DefaultDownloadDirectory"><textBox refId="DefaultDownloadDirectory"><label>Set default download directory</label></textBox></presentation><presentation id="DeveloperToolsAvailability"><dropdownList refId="DeveloperToolsAvailability">Control where Developer Tools can be used</dropdownList></presentation><presentation id="Disable3DAPIs"/><presentation id="DisableSafeBrowsingProceedAnyway"/><presentation id="DisableScreenshots"/><presentation id="DiskCacheDir"><textBox refId="DiskCacheDir"><label>Set disk cache directory</label></textBox></presentation><presentation id="DiskCacheSize"><decimalTextBox refId="DiskCacheSize">Set disk cache size:</decimalTextBox></presentation><presentation id="DownloadDirectory"><textBox refId="DownloadDirectory"><label>Set download directory</label></textBox></presentation><presentation id="DownloadRestrictions"><dropdownList refId="DownloadRestrictions">Download restrictions</dropdownList></presentation><presentation id="EditBookmarksEnabled"/><presentation id="EnableDeprecatedWebPlatformFeatures"><listBox refId="EnableDeprecatedWebPlatformFeaturesDesc">Enable deprecated web platform features for a limited time</listBox></presentation><presentation id="EnableOnlineRevocationChecks"/><presentation id="EnterpriseHardwarePlatformAPIEnabled"/><presentation id="ForceEphemeralProfiles"/><presentation id="ForceGoogleSafeSearch"/><presentation id="ForceNetworkInProcess"/><presentation id="ForceYouTubeRestrict"><dropdownList refId="ForceYouTubeRestrict">Force minimum YouTube Restricted Mode</dropdownList></presentation><presentation id="FullscreenAllowed"/><presentation id="HardwareAccelerationModeEnabled"/><presentation id="HideWebStoreIcon"/><presentation id="Http09OnNonDefaultPortsEnabled"/><presentation id="ImportAutofillFormData"/><presentation id="ImportBookmarks"/><presentation id="ImportHistory"/><presentation id="ImportHomepage"/><presentation id="ImportSavedPasswords"/><presentation id="ImportSearchEngine"/><presentation id="IncognitoModeAvailability"><dropdownList refId="IncognitoModeAvailability">Incognito mode availability</dropdownList></presentation><presentation id="IsolateOrigins"><textBox refId="IsolateOrigins"><label>Enable Site Isolation for specified origins</label></textBox></presentation><presentation id="ManagedBookmarks"><textBox refId="ManagedBookmarks"><label>Managed Bookmarks</label></textBox></presentation><presentation id="MaxConnectionsPerProxy"><decimalTextBox refId="MaxConnectionsPerProxy">Maximal number of concurrent connections to the proxy server:</decimalTextBox></presentation><presentation id="MaxInvalidationFetchDelay"><decimalTextBox refId="MaxInvalidationFetchDelay">Maximum fetch delay after a policy invalidation:</decimalTextBox></presentation><presentation id="MediaCacheSize"><decimalTextBox refId="MediaCacheSize">Set media disk cache size:</decimalTextBox></presentation><presentation id="MediaRouterCastAllowAllIPs"/><presentation id="MetricsReportingEnabled"/><presentation id="NetworkPredictionOptions"><dropdownList refId="NetworkPredictionOptions">Enable network prediction</dropdownList></presentation><presentation id="OverrideSecurityRestrictionsOnInsecureOrigin"><listBox refId="OverrideSecurityRestrictionsOnInsecureOriginDesc">Origins or hostname patterns for which restrictions on
insecure origins should not apply</listBox></presentation><presentation id="PolicyListMultipleSourceMergeList"><listBox refId="PolicyListMultipleSourceMergeListDesc">Allow merging list policies from different sources</listBox></presentation><presentation id="PromotionalTabsEnabled"/><presentation id="PromptForDownloadLocation"/><presentation id="ProxySettings"><textBox refId="ProxySettings"><label>Proxy settings</label></textBox></presentation><presentation id="QuicAllowed"/><presentation id="RelaunchNotification"><dropdownList refId="RelaunchNotification">Notify a user that a browser relaunch or device restart is recommended or required</dropdownList></presentation><presentation id="RelaunchNotificationPeriod"><decimalTextBox refId="RelaunchNotificationPeriod">Time period (milliseconds):</decimalTextBox></presentation><presentation id="RequireOnlineRevocationChecksForLocalAnchors"/><presentation id="RestrictSigninToPattern"><textBox refId="RestrictSigninToPattern"><label>Restrict which Google accounts are allowed to be set as browser primary accounts in Google Chrome</label></textBox></presentation><presentation id="RoamingProfileLocation"><textBox refId="RoamingProfileLocation"><label>Set the roaming profile directory</label></textBox></presentation><presentation id="RoamingProfileSupportEnabled"/><presentation id="RunAllFlashInAllowMode"/><presentation id="SSLErrorOverrideAllowed"/><presentation id="SSLVersionMin"><dropdownList refId="SSLVersionMin">Minimum SSL version enabled</dropdownList></presentation><presentation id="SafeBrowsingForTrustedSourcesEnabled"/><presentation id="SafeSitesFilterBehavior"><dropdownList refId="SafeSitesFilterBehavior">Control SafeSites adult content filtering.</dropdownList></presentation><presentation id="SavingBrowserHistoryDisabled"/><presentation id="SearchSuggestEnabled"/><presentation id="SecurityKeyPermitAttestation"><listBox refId="SecurityKeyPermitAttestationDesc">URLs/domains automatically permitted direct Security Key attestation</listBox></presentation><presentation id="ShowAppsShortcutInBookmarkBar"/><presentation id="SignedHTTPExchangeEnabled"/><presentation id="SitePerProcess"/><presentation id="SpellCheckServiceEnabled"/><presentation id="SpellcheckEnabled"/><presentation id="SpellcheckLanguage"><listBox refId="SpellcheckLanguageDesc">Force enable spellcheck languages</listBox></presentation><presentation id="SpellcheckLanguageBlacklist"><listBox refId="SpellcheckLanguageBlacklistDesc">Force disable spellcheck languages</listBox></presentation><presentation id="SuppressUnsupportedOSWarning"/><presentation id="SyncDisabled"/><presentation id="TabLifecyclesEnabled"/><presentation id="TaskManagerEndProcessEnabled"/><presentation id="ThirdPartyBlockingEnabled"/><presentation id="TranslateEnabled"/><presentation id="URLBlacklist"><listBox refId="URLBlacklistDesc">Block access to a list of URLs</listBox></presentation><presentation id="URLWhitelist"><listBox refId="URLWhitelistDesc">Allow access to a list of URLs</listBox></presentation><presentation id="UrlKeyedAnonymizedDataCollectionEnabled"/><presentation id="UserDataDir"><textBox refId="UserDataDir"><label>Set user data directory</label></textBox></presentation><presentation id="VideoCaptureAllowed"/><presentation id="VideoCaptureAllowedUrls"><listBox refId="VideoCaptureAllowedUrlsDesc">URLs that will be granted access to video capture devices without prompt</listBox></presentation><presentation id="WPADQuickCheckEnabled"/><presentation id="WebAppInstallForceList"><textBox refId="WebAppInstallForceList"><label>URLs for Web Apps to be silently installed.</label></textBox></presentation><presentation id="WebDriverOverridesIncompatiblePolicies"/><presentation id="WebRtcEventLogCollectionAllowed"/><presentation id="WebRtcUdpPortRange"><textBox refId="WebRtcUdpPortRange"><label>Restrict the range of local UDP ports used by WebRTC</label></textBox></presentation><presentation id="WelcomePageOnOSUpgradeEnabled"/></presentationTable></resources></policyDefinitionResources>